#if !defined(RTE_OILSYS_TYPE_H)
#define RTE_OILSYS_TYPE_H

/**
 * \file
 *
 * \brief AUTOSAR Rte
 *
 * This file contains the implementation of the AUTOSAR
 * module Rte.
 *
 * \author Elektrobit Automotive GmbH, 91058 Erlangen, Germany
 *
 * Copyright 2005 - 2013 Elektrobit Automotive GmbH
 * All rights exclusively reserved for Elektrobit Automotive GmbH,
 * unless expressly agreed to otherwise.
 */

 /*
  * This file contains the application-specific types for component type OILSYS
  *
  * This file has been automatically generated by
  * EB tresos AutoCore Rte Generator Version 6.1.57
  * on Mon Nov 03 12:24:27 CET 2014. !!!IGNORE-LINE!!!
  */

 /* \addtogroup Rte Runtime Environment
  * @{ */

/*==================[inclusions]=============================================*/

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#include <Rte_Type.h>         /* RTE types header file */

/*==================[macros]=================================================*/

/*------------------[enumeration constants]----------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */

#ifndef CoPTSt_stEng_Coupe_Cale
#define CoPTSt_stEng_Coupe_Cale 1U
#endif /* CoPTSt_stEng_Coupe_Cale */

#ifndef CoPTSt_stEng_Preparation
#define CoPTSt_stEng_Preparation 2U
#endif /* CoPTSt_stEng_Preparation */

#ifndef CoPTSt_stEng_Driven_Start
#define CoPTSt_stEng_Driven_Start 3U
#endif /* CoPTSt_stEng_Driven_Start */

#ifndef CoPTSt_stEng_Autonomous_Start
#define CoPTSt_stEng_Autonomous_Start 4U
#endif /* CoPTSt_stEng_Autonomous_Start */

#ifndef CoPTSt_stEng_Engine_Running
#define CoPTSt_stEng_Engine_Running 5U
#endif /* CoPTSt_stEng_Engine_Running */

#ifndef CoPTSt_stEng_Stop
#define CoPTSt_stEng_Stop 6U
#endif /* CoPTSt_stEng_Stop */

#ifndef CoPTSt_stEng_Driven_Restart
#define CoPTSt_stEng_Driven_Restart 7U
#endif /* CoPTSt_stEng_Driven_Restart */

#ifndef CoPTSt_stEng_Autonomous_Restart
#define CoPTSt_stEng_Autonomous_Restart 8U
#endif /* CoPTSt_stEng_Autonomous_Restart */

#ifndef CoPTSt_stEng_reserve_9
#define CoPTSt_stEng_reserve_9 9U
#endif /* CoPTSt_stEng_reserve_9 */

#ifndef CoPTSt_stEng_reserve_10
#define CoPTSt_stEng_reserve_10 10U
#endif /* CoPTSt_stEng_reserve_10 */

#ifndef CoPTSt_stEng_reserve_11
#define CoPTSt_stEng_reserve_11 11U
#endif /* CoPTSt_stEng_reserve_11 */

#ifndef CoPTSt_stEng_reserve_12
#define CoPTSt_stEng_reserve_12 12U
#endif /* CoPTSt_stEng_reserve_12 */

#ifndef CoPTSt_stEng_reserve_13
#define CoPTSt_stEng_reserve_13 13U
#endif /* CoPTSt_stEng_reserve_13 */

#ifndef CoPTSt_stEng_reserve_14
#define CoPTSt_stEng_reserve_14 14U
#endif /* CoPTSt_stEng_reserve_14 */

#ifndef CoPTSt_stEng_reserve_15
#define CoPTSt_stEng_reserve_15 15U
#endif /* CoPTSt_stEng_reserve_15 */

#ifndef DEM_EVENT_STATUS_FAILED
#define DEM_EVENT_STATUS_FAILED 1U
#endif /* DEM_EVENT_STATUS_FAILED */

#ifndef DEM_EVENT_STATUS_INIT
#define DEM_EVENT_STATUS_INIT 32U
#endif /* DEM_EVENT_STATUS_INIT */

#ifndef DEM_EVENT_STATUS_PASSED
#define DEM_EVENT_STATUS_PASSED 0U
#endif /* DEM_EVENT_STATUS_PASSED */

#ifndef DEM_EVENT_STATUS_PREFAILED
#define DEM_EVENT_STATUS_PREFAILED 3U
#endif /* DEM_EVENT_STATUS_PREFAILED */

#ifndef DEM_EVENT_STATUS_PREPASSED
#define DEM_EVENT_STATUS_PREPASSED 2U
#endif /* DEM_EVENT_STATUS_PREPASSED */

#ifndef OilTqCf_bPresOilReqCf_utilisation_de_la_cartographie_de_consigne_de_pression_d_huile_faible_charge
#define OilTqCf_bPresOilReqCf_utilisation_de_la_cartographie_de_consigne_de_pression_d_huile_faible_charge 0U
#endif /* OilTqCf_bPresOilReqCf_utilisation_de_la_cartographie_de_consigne_de_pression_d_huile_faible_charge */

#ifndef OilTqCf_bPresOilReqCf_utilisation_de_la_cartographie_de_consigne_de_pression_d_huile_forte_charge
#define OilTqCf_bPresOilReqCf_utilisation_de_la_cartographie_de_consigne_de_pression_d_huile_forte_charge 1U
#endif /* OilTqCf_bPresOilReqCf_utilisation_de_la_cartographie_de_consigne_de_pression_d_huile_forte_charge */

#ifndef OilSys_stCtlTyp_cylindree_maximale
#define OilSys_stCtlTyp_cylindree_maximale 0U
#endif /* OilSys_stCtlTyp_cylindree_maximale */

#ifndef OilSys_stCtlTyp_regulation_on_off
#define OilSys_stCtlTyp_regulation_on_off 1U
#endif /* OilSys_stCtlTyp_regulation_on_off */

#ifndef OilSys_stCtlTyp_regulation_proportionnelle
#define OilSys_stCtlTyp_regulation_proportionnelle 2U
#endif /* OilSys_stCtlTyp_regulation_proportionnelle */

#ifndef OilSys_stCtlTyp_controle_manuel_de_l_EV_par_calib
#define OilSys_stCtlTyp_controle_manuel_de_l_EV_par_calib 3U
#endif /* OilSys_stCtlTyp_controle_manuel_de_l_EV_par_calib */

#ifndef OilSys_stCtlTyp_mode_gymnasticage
#define OilSys_stCtlTyp_mode_gymnasticage 4U
#endif /* OilSys_stCtlTyp_mode_gymnasticage */

#ifndef OilSys_stCtlTyp_reserve_5
#define OilSys_stCtlTyp_reserve_5 5U
#endif /* OilSys_stCtlTyp_reserve_5 */

#ifndef OilSys_stCtlTyp_reserve_6
#define OilSys_stCtlTyp_reserve_6 6U
#endif /* OilSys_stCtlTyp_reserve_6 */

#ifndef OilSys_stCtlTyp_reserve_7
#define OilSys_stCtlTyp_reserve_7 7U
#endif /* OilSys_stCtlTyp_reserve_7 */

#endif /* (!defined RTE_CORE) */

/*------------------[range definitions]--------------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */

#endif /* (!defined RTE_CORE) */

/*------------------[mode declarations]--------------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */

#ifndef RTE_TRANSITION_RCD_stWkuMainRelSt
#define RTE_TRANSITION_RCD_stWkuMainRelSt 4U
#endif

#ifndef RTE_MODE_RCD_stWkuMainRelSt_Invalid
#define RTE_MODE_RCD_stWkuMainRelSt_Invalid 0U
#endif

#ifndef RTE_MODE_RCD_stWkuMainRelSt_MainWakeUp
#define RTE_MODE_RCD_stWkuMainRelSt_MainWakeUp 1U
#endif

#ifndef RTE_MODE_RCD_stWkuMainRelSt_PostMainWakeUp
#define RTE_MODE_RCD_stWkuMainRelSt_PostMainWakeUp 2U
#endif

#ifndef RTE_MODE_RCD_stWkuMainRelSt_PreMainWakeUp
#define RTE_MODE_RCD_stWkuMainRelSt_PreMainWakeUp 3U
#endif

#ifndef RTE_TRANSITION_EcuM_Mode
#define RTE_TRANSITION_EcuM_Mode 6U
#endif

#ifndef RTE_MODE_EcuM_Mode_POST_RUN
#define RTE_MODE_EcuM_Mode_POST_RUN 0U
#endif

#ifndef RTE_MODE_EcuM_Mode_RUN
#define RTE_MODE_EcuM_Mode_RUN 1U
#endif

#ifndef RTE_MODE_EcuM_Mode_SHUTDOWN
#define RTE_MODE_EcuM_Mode_SHUTDOWN 2U
#endif

#ifndef RTE_MODE_EcuM_Mode_SLEEP
#define RTE_MODE_EcuM_Mode_SLEEP 3U
#endif

#ifndef RTE_MODE_EcuM_Mode_STARTUP
#define RTE_MODE_EcuM_Mode_STARTUP 4U
#endif

#ifndef RTE_MODE_EcuM_Mode_WAKE_SLEEP
#define RTE_MODE_EcuM_Mode_WAKE_SLEEP 5U
#endif

#endif /* (!defined RTE_CORE) */

/*==================[type definitions]=======================================*/

/*------------------[mode declaration group types]---------------------------*/

#if (!defined RTE_CORE) /* if included by software component */

#ifndef RTE_MODETYPE_RCD_stWkuMainRelSt
#define RTE_MODETYPE_RCD_stWkuMainRelSt
typedef UInt8 Rte_ModeType_RCD_stWkuMainRelSt;
#endif

#ifndef RTE_MODETYPE_EcuM_Mode
#define RTE_MODETYPE_EcuM_Mode
typedef UInt8 Rte_ModeType_EcuM_Mode;
#endif

#endif /* (!defined RTE_CORE) */

/*==================[external function declarations]=========================*/

/*==================[internal function declarations]=========================*/

/*==================[external constants]=====================================*/

/*==================[internal constants]=====================================*/

/*==================[external data]==========================================*/

/*==================[internal data]==========================================*/

/*==================[external function definitions]==========================*/

/*==================[internal function definitions]==========================*/

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */
/** @} doxygen end group definition */
#endif /* !defined(RTE_OILSYS_TYPE_H) */
/*==================[end of file]============================================*/

