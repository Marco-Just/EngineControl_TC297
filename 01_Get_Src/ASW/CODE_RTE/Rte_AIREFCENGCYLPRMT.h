#if !defined(RTE_AIREFCENGCYLPRMT_H)
#define RTE_AIREFCENGCYLPRMT_H

/**
 * \file
 *
 * \brief AUTOSAR Rte
 *
 * This file contains the implementation of the AUTOSAR
 * module Rte.
 *
 * \author Elektrobit Automotive GmbH, 91058 Erlangen, Germany
 *
 * Copyright 2005 - 2013 Elektrobit Automotive GmbH
 * All rights exclusively reserved for Elektrobit Automotive GmbH,
 * unless expressly agreed to otherwise.
 */

 /*
  * This file contains Rte component declarations for component type AIREFCENGCYLPRMT
  *
  * This file has been automatically generated by
  * EB tresos AutoCore Rte Generator Version 6.1.57
  * on Mon Nov 03 12:24:28 CET 2014. !!!IGNORE-LINE!!!
  */

 /* \addtogroup Rte Runtime Environment
  * @{ */

/*==================[inclusions]=============================================*/

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#include <Rte_Intern_Application_Core1.h>
#include <Rte_Main.h>         /* RTE main header file */
#include <Rte_AIREFCENGCYLPRMT_Type.h> /* RTE application types header file */
#include <Rte_Hook.h> /* RTE VFB trace hooks header file */

/*==================[macros]=================================================*/

#if (!defined RTE_CORE) /* if included by software component */

#if (!defined RTE_APPLICATION_HEADER_FILE_H) /* prevent double inclusion */
#define RTE_APPLICATION_HEADER_FILE_H
#else
#error Multiple application header files included.
#endif /* if !defined( RTE_APPLICATION_HEADER_FILE_H ) */

#endif

/*------------------[API mapping]--------------------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */

#endif

/*------------------[port handle API mapping]--------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */

#endif

/*------------------[application errors]-------------------------------------*/

/*------------------[init values]--------------------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */

#endif

/*==================[type definitions]=======================================*/

/*------------------[instance handle type]-----------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */
typedef CONSTP2CONST(Rte_CDS_AIREFCENGCYLPRMT, RTE_CONST, RTE_CONST) Rte_Instance;
#endif

/*------------------[port handle types]--------------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */
#endif

/*------------------[per instance memory types]------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */

#endif

/*==================[external function declarations]=========================*/

/*------------------[declaration of runnable entities]-----------------------*/

#define RTE_START_SEC_APPLICATION_CORE1_APPL_CODE
#include "MemMap.h"

extern FUNC(void, RTE_APPL_CODE) OP_LibEngCylPrm(UInt16 In_InM_tAirUsInVlvEstimRef, Float32 In_AirEfc_tBurnCyl, UInt16 In_InM_pDsThr, Float32 In_AirEfc_facOfsEfc, Float32 In_AirEfc_facSlopEfc, Float32 In_AirEfc_rMassAirResi, Float32 In_AirEfc_rMassBurn, Float32 In_AirEfc_rMassAirScv, Float32 In_AirEfc_facMassFlowLd, Float32 In_InM_concAir, Float32 In_AirEfc_pDsThrCorClsInVlv, Float32 In_AirEfc_rVolCylClsInVlv, UInt16 In_Ext_nEngRef, UInt8 In_EngM_noAcvMPVal, UInt16 In_InjSys_tFuRef, Float32 In_EngM_agCkClsInVlvRef1, Float32 In_AirEfc_agInj1End, Float32 In_AirEfc_rFuMassInj1InPha, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_EngM_rItBurnRate, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_EngM_tMixtCyl, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_EngM_rAirLd, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_EngM_rTotLdEx, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_EngM_mfAirScv, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_EngM_mAir, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_EngM_mfAir, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_EngM_mTotEx, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_EngM_mfTotEx, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_EngM_mBurn, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_EngM_mAirScv, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_EngM_tMixtCylGDI, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_EngM_rltMassAirScv);

extern FUNC(void, RTE_APPL_CODE) OP_LibAirEfc(UInt16 In_Ext_nEngRef, Float32 In_EngM_agCkClsExVlvRef1, Float32 In_EngM_agCkClsInVlvRef1, Float32 In_EngM_agCkOpInVlvRef1, UInt16 In_InM_tAirUsInVlvEstimRef, Float32 In_ExM_tExMnfEstimRef, UInt16 In_InM_pDsThr, Float32 In_ExM_pExMnfEstimRef, Float32 In_UsThrM_pAirExtEstimRef, UInt16 In_InjSys_rlamEngCorReqRef, Float32 In_InM_pDsThrPred_facVlvOvlpRef, SInt16 In_Ext_tCoMes, Float32 In_AirEfc_facChrExpFilPrev, Float32 In_AirEfc_facChrExpScvFilPrev, UInt8 In_EngM_noAcvMPVal, Float32 In_InjSys_agInj1BegRef, Float32 In_InjSys_agInj1EndRef, Float32 In_InjSys_mFu1Inj, UInt16 In_InjSys_tFuRef, Float32 In_EngM_facCorOfsEfcRef, Float32 In_EngM_facCorSlopEfcRef, UInt16 In_InThM_nEngCorRef, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_AirEfc_rMassBurn, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_AirEfc_rMassAirResi, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_AirEfc_facSlopEfc, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_AirEfc_facOfsEfc, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_AirEfc_rMassAirScv, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_AirEfc_pDsThrCorClsInVlv, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_AirEfc_tBurnCyl, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_AirEfc_rVolCylClsInVlv, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_AirEfc_facMassFlowLd, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_AirEfc_facChrExpFil, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_AirEfc_facChrExpScvFil, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_AirEfc_facMassAirScv, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_AirEfc_agInj1End, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_AirEfc_rFuMassInj1InPha, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_AirEfc_rDeltaLdInjPhaRef, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_AirEfc_facTAirUsInVlv, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_AirEfc_facTCo, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_AirEfc_facCorAtmSlopEfc, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_AirEfc_facCorBoostSlopEfc, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_AirEfc_pBegCorBoostSlopEfc, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_AirEfc_pDeltaCorSlopEfc);

extern FUNC(void, RTE_APPL_CODE) OP_LibVlvBasChg(Float32 In_EngM_agCkOpInVlvRef0, Float32 In_EngM_agCkClsExVlvRef0, SInt16 In_Ext_tCoStrtMes, Float32 In_AFA_agCkOpInVlvOfs, Float32 In_AFA_agCkClsExVlvOfs, UInt32 In_EOM_tiEngRun, Float32 In_EngM_dstInVlvClrCor, Float32 In_EngM_dstExVlvClrCor, UInt8 In_EngM_noAcvVlvMPVal, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_EngM_agCkOpInVlvRef1, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_EngM_agCkClsInVlvRef1, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_EngM_agCkClsInVlvRef0, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_EngM_agCkClsExVlvRef1, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_EngM_agCkOpExVlvRef1, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_EngM_agCkOpExVlvRef0, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_EngM_agCkClsExVlvOfsRef0, P2VAR(Float32, AUTOMATIC, RTE_APPL_DATA) Out_EngM_agCkOpInVlvOfsRef0);

#define RTE_STOP_SEC_APPLICATION_CORE1_APPL_CODE
#include "MemMap.h"

/*--------------[declaration of API functions provided by Rte]--------------*/

#define RTE_START_SEC_APPLICATION_CORE1_CODE
#include "MemMap.h"

#define RTE_STOP_SEC_APPLICATION_CORE1_CODE
#include "MemMap.h"

/*--------------[declaration of API functions provided by other Appl]--------*/

#define RTE_START_SEC_APPLICATION_CORE1_APPL_CODE
#include "MemMap.h"

#if (!defined RTE_CORE) /* if included by software component */

#endif /* (!defined RTE_CORE) */

#define RTE_STOP_SEC_APPLICATION_CORE1_APPL_CODE
#include "MemMap.h"

/*==================[internal function declarations]=========================*/

/*==================[external constants]=====================================*/

/*------------------[instance handle declaration]----------------------------*/
#define RTE_START_SEC_APPLICATION_CORE1_CONST_UNSPECIFIED
#include "MemMap.h"

extern CONSTP2CONST(Rte_CDS_AIREFCENGCYLPRMT, RTE_CONST, RTE_CONST) Rte_Inst_AIREFCENGCYLPRMT;

#define RTE_STOP_SEC_APPLICATION_CORE1_CONST_UNSPECIFIED
#include "MemMap.h"

/*==================[internal constants]=====================================*/

/*==================[external data]==========================================*/

/*==================[internal data]==========================================*/

/*==================[external function definitions]==========================*/

/*==================[internal function definitions]==========================*/

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */
/** @} doxygen end group definition */
#endif /* !defined(RTE_AIREFCENGCYLPRMT_H) */
/*==================[end of file]============================================*/

