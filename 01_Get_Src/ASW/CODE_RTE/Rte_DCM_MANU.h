#if !defined(RTE_DCM_MANU_H)
#define RTE_DCM_MANU_H

/**
 * \file
 *
 * \brief AUTOSAR Rte
 *
 * This file contains the implementation of the AUTOSAR
 * module Rte.
 *
 * \author Elektrobit Automotive GmbH, 91058 Erlangen, Germany
 *
 * Copyright 2005 - 2013 Elektrobit Automotive GmbH
 * All rights exclusively reserved for Elektrobit Automotive GmbH,
 * unless expressly agreed to otherwise.
 */

 /*
  * This file contains Rte component declarations for component type DCM_MANU
  *
  * This file has been automatically generated by
  * EB tresos AutoCore Rte Generator Version 6.1.57
  * on Mon Nov 03 12:24:32 CET 2014. !!!IGNORE-LINE!!!
  */

 /* \addtogroup Rte Runtime Environment
  * @{ */

/*==================[inclusions]=============================================*/

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#include <Rte_Intern_Application_Core1.h>
#include <Rte_Main.h>         /* RTE main header file */
#include <Rte_DCM_MANU_Type.h> /* RTE application types header file */
#include <Rte_Hook.h> /* RTE VFB trace hooks header file */

/*==================[macros]=================================================*/

#if (!defined RTE_CORE) /* if included by software component */

#if (!defined RTE_APPLICATION_HEADER_FILE_H) /* prevent double inclusion */
#define RTE_APPLICATION_HEADER_FILE_H
#else
#error Multiple application header files included.
#endif /* if !defined( RTE_APPLICATION_HEADER_FILE_H ) */

#endif

/*------------------[API mapping]--------------------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */
#if !defined(RTE_RUNNABLEAPI_RE_StartProtocol) || !defined(RTE_RUNNABLEAPI_RE_StopProtocol) || !defined(RTE_RUNNABLEAPI_RE_Supplier_Indication) || !defined(RTE_RUNNABLEAPI_RE_Manufacturer_Indication) || !defined(RTE_RUNNABLEAPI_RE_ManufSuppl_Indication) || !defined(RTE_RUNNABLEAPI_RE_GetSeed_SecLev02) || !defined(RTE_RUNNABLEAPI_RE_CompareKey_SecLev02) || !defined(RTE_RUNNABLEAPI_RE_OBDMID01TID01) || !defined(RTE_RUNNABLEAPI_RE_OBDMID01TID02) || !defined(RTE_RUNNABLEAPI_RE_OBDMID01TID03) || !defined(RTE_RUNNABLEAPI_RE_OBDMID01TID04) || !defined(RTE_RUNNABLEAPI_RE_OBDMID01TID07) || !defined(RTE_RUNNABLEAPI_RE_OBDMID01TID08) || !defined(RTE_RUNNABLEAPI_RE_OBDMID01TID0A) || !defined(RTE_RUNNABLEAPI_RE_OBDMID01TIDA0) || !defined(RTE_RUNNABLEAPI_RE_OBDMID01TIDA1) || !defined(RTE_RUNNABLEAPI_RE_OBDMID02TID01) || !defined(RTE_RUNNABLEAPI_RE_OBDMID02TID02) || !defined(RTE_RUNNABLEAPI_RE_OBDMID02TID03) || !defined(RTE_RUNNABLEAPI_RE_OBDMID02TID04) || !defined(RTE_RUNNABLEAPI_RE_OBDMID02TID07) || !defined(RTE_RUNNABLEAPI_RE_OBDMID02TID08) || !defined(RTE_RUNNABLEAPI_RE_OBDMID02TIDC0) || !defined(RTE_RUNNABLEAPI_RE_OBDMID02TIDC1) || !defined(RTE_RUNNABLEAPI_RE_OBDMID02TIDC2) || !defined(RTE_RUNNABLEAPI_RE_OBDMID21TID81) || !defined(RTE_RUNNABLEAPI_RE_OBDMID41TIDD0) || !defined(RTE_RUNNABLEAPI_RE_OBDMID42TIDDA) || !defined(RTE_RUNNABLEAPI_RE_OBDMIDA2TID0B) || !defined(RTE_RUNNABLEAPI_RE_OBDMIDA2TID0C) || !defined(RTE_RUNNABLEAPI_RE_OBDMIDA3TID0B) || !defined(RTE_RUNNABLEAPI_RE_OBDMIDA3TID0C) || !defined(RTE_RUNNABLEAPI_RE_OBDMIDA4TID0B) || !defined(RTE_RUNNABLEAPI_RE_OBDMIDA4TID0C) || !defined(RTE_RUNNABLEAPI_RE_OBDMIDA5TID0B) || !defined(RTE_RUNNABLEAPI_RE_OBDMIDA5TID0C)
#define Rte_Call_R_CoStopStart_AftsNvramRead_1_CoStopStart_AftsNvramRead_1(CoStopStart_tabNvram_1) (RE_CoStopStart_AftsNvramRead_1(CoStopStart_tabNvram_1), RTE_E_OK)

#define Rte_Call_R_CoStopStart_AftsNvramWrite_1_CoStopStart_AftsNvramWrite_1(CoStopStart_tabNvram_1) (RE_CoStopStart_AftsNvramWrite_1(CoStopStart_tabNvram_1), RTE_E_OK)

#define Rte_Call_R_CoEmSTT_AftsNvramRead_1_op_CoEmSTT_AftsNvramRead_1(CoEmSTT_tabNvram_1) (RE_CoEmSTT_AftsNvramRead_1(CoEmSTT_tabNvram_1), RTE_E_OK)

#define Rte_Call_R_CoEmSTT_AftsNvramWrite_1_op_CoEmSTT_AftsNvramWrite_1(CoEmSTT_tabNvram_1) (RE_CoEmSTT_AftsNvramWrite_1(CoEmSTT_tabNvram_1), RTE_E_OK)

#define Rte_Call_R_StopStrtEm_AftsNvramRead_1_op_StopStrtEm_AftsNvramRead_1(StopStrtEm_tabNvram_1) (RE_StopStrtEm_AftsNvramRead_1(StopStrtEm_tabNvram_1), RTE_E_OK)

#define Rte_Call_R_StopStrtEm_AftsNvramWrite_1_op_StopStrtEm_AftsNvramWrite_1(StopStrtEm_tabNvram_1) (RE_StopStrtEm_AftsNvramWrite_1(StopStrtEm_tabNvram_1), RTE_E_OK)

#define Rte_Call_R_ProdElEng_AftsNvramRead_1_op_ProdElEng_AftsNvramRead_1(ProdElEng_tabNvram_1) (RE_ProdElEng_AftsNvramRead_1(ProdElEng_tabNvram_1), RTE_E_OK)

#define Rte_Call_R_ProdElEng_AftsNvramWrite_1_op_ProdElEng_AftsNvramWrite_1(ProdElEng_tabNvram_1) (RE_ProdElEng_AftsNvramWrite_1(ProdElEng_tabNvram_1), RTE_E_OK)

#define Rte_Call_R_ThMgt_AftsNvramRead_1_op_ThMgt_AftsNvramRead_1(ThMgt_tabNVRAM_1) (RE_ThMgt_AftsNvramRead_1(ThMgt_tabNVRAM_1), RTE_E_OK)

#define Rte_Call_R_ThMgt_AftsNvramWrite_1_op_ThMgt_AftsNvramWrite_1(ThMgt_tabNVRAM_1) (RE_ThMgt_AftsNvramWrite_1(ThMgt_tabNVRAM_1), RTE_E_OK)

#define Rte_Call_R_DidServices_MPM_NVMID01_ReadData(data) (RE_MPM_AftsNvmRead(1U, data))

#define Rte_Call_R_DidServices_MPM_NVMID01_WriteData(data, dataLength, ErrorCode) (RE_MPM_AftsNvmWrite(1U, data, dataLength, ErrorCode))

#define Rte_Call_R_DidServices_MPM_NVMID01_ConditionCheckRead(ErrorCode) (RE_MPM_AftsNvmChkRead(1U, ErrorCode))

#define Rte_Call_R_DidServices_MPM_NVMID01_ConditionCheckWrite(ErrorCode) (RE_MPM_AftsNvmChkWrite(1U, ErrorCode))

#define Rte_Call_R_DidServices_MPM_NVMID01_ReadDataLength(DidLength) (RE_MPM_AftsNvmRDL(1U, DidLength))

#define Rte_Call_R_DidServices_MPM_NVMID02_ReadData(data) (RE_MPM_AftsNvmRead(2U, data))

#define Rte_Call_R_DidServices_MPM_NVMID02_WriteData(data, dataLength, ErrorCode) (RE_MPM_AftsNvmWrite(2U, data, dataLength, ErrorCode))

#define Rte_Call_R_DidServices_MPM_NVMID02_ConditionCheckRead(ErrorCode) (RE_MPM_AftsNvmChkRead(2U, ErrorCode))

#define Rte_Call_R_DidServices_MPM_NVMID02_ConditionCheckWrite(ErrorCode) (RE_MPM_AftsNvmChkWrite(2U, ErrorCode))

#define Rte_Call_R_DidServices_MPM_NVMID02_ReadDataLength(DidLength) (RE_MPM_AftsNvmRDL(2U, DidLength))

#define Rte_Call_R_DidServices_MPM_NVMID05_ReadData(data) (RE_MPM_AftsNvmRead(5U, data))

#define Rte_Call_R_DidServices_MPM_NVMID05_WriteData(data, dataLength, ErrorCode) (RE_MPM_AftsNvmWrite(5U, data, dataLength, ErrorCode))

#define Rte_Call_R_DidServices_MPM_NVMID05_ConditionCheckRead(ErrorCode) (RE_MPM_AftsNvmChkRead(5U, ErrorCode))

#define Rte_Call_R_DidServices_MPM_NVMID05_ConditionCheckWrite(ErrorCode) (RE_MPM_AftsNvmChkWrite(5U, ErrorCode))

#define Rte_Call_R_DidServices_MPM_NVMID05_ReadDataLength(DidLength) (RE_MPM_AftsNvmRDL(5U, DidLength))

#define Rte_Call_R_DidServices_MPM_NVMID06_ReadData(data) (RE_MPM_AftsNvmRead(6U, data))

#define Rte_Call_R_DidServices_MPM_NVMID06_WriteData(data, dataLength, ErrorCode) (RE_MPM_AftsNvmWrite(6U, data, dataLength, ErrorCode))

#define Rte_Call_R_DidServices_MPM_NVMID06_ConditionCheckRead(ErrorCode) (RE_MPM_AftsNvmChkRead(6U, ErrorCode))

#define Rte_Call_R_DidServices_MPM_NVMID06_ConditionCheckWrite(ErrorCode) (RE_MPM_AftsNvmChkWrite(6U, ErrorCode))

#define Rte_Call_R_DidServices_MPM_NVMID06_ReadDataLength(DidLength) (RE_MPM_AftsNvmRDL(6U, DidLength))

#define Rte_Call_R_RoutineServices_MPM_NVMID03_Start(InBuffer, OutBuffer, ErrorCode) (RE_MPM_RstStart(3U, InBuffer, OutBuffer, ErrorCode))

#define Rte_Call_R_RoutineServices_MPM_NVMID03_RequestResults(OutBuffer, ErrorCode) (RE_MPM_RstRqResults(3U, OutBuffer, ErrorCode))

#define Rte_Call_R_RoutineServices_MPM_NVMID04_Start(InBuffer, OutBuffer, ErrorCode) (RE_MPM_RstStart(4U, InBuffer, OutBuffer, ErrorCode))

#define Rte_Call_R_RoutineServices_MPM_NVMID04_RequestResults(OutBuffer, ErrorCode) (RE_MPM_RstRqResults(4U, OutBuffer, ErrorCode))

#define Rte_Call_R_RoutineServices_MPM_NVMID07_Start(InBuffer, OutBuffer, ErrorCode) (RE_MPM_RstStart(7U, InBuffer, OutBuffer, ErrorCode))

#define Rte_Call_R_RoutineServices_MPM_NVMID07_RequestResults(OutBuffer, ErrorCode) (RE_MPM_RstRqResults(7U, OutBuffer, ErrorCode))

#define Rte_Call_R_RoutineServices_MPM_NVMID08_Start(InBuffer, OutBuffer, ErrorCode) (RE_MPM_RstStart(8U, InBuffer, OutBuffer, ErrorCode))

#define Rte_Call_R_RoutineServices_MPM_NVMID08_RequestResults(OutBuffer, ErrorCode) (RE_MPM_RstRqResults(8U, OutBuffer, ErrorCode))

#define Rte_Call_R_MPM_SessionControl_GetSesChgPermission RE_MPM_AftsGetSesChgPerm

#define Rte_Call_R_MPM_SessionControl_ChangeIndication RE_MPM_AftsSesChgInd

#define Rte_Call_R_RoutineServices_AFMgtT_NVMID03_Start(InBuffer, OutBuffer, ErrorCode) (RE_AFAMgtT_RstStart(3U, InBuffer, OutBuffer, ErrorCode))

#define Rte_Call_R_RoutineServices_AFMgtT_NVMID03_RequestResults(OutBuffer, ErrorCode) (RE_AFAMgtT_RstRqResults(3U, OutBuffer, ErrorCode))

#define Rte_Call_R_AFAMgtT_SessionControl_GetSesChgPermission RE_AFAMgtT_AftsGetSesChgPerm

#define Rte_Call_R_AFAMgtT_SessionControl_ChangeIndication RE_AFAMgtT_AftsSesChgInd

#define Rte_Call_R_DfwCtl_AftsNvramRead_1_DfwCtl_AftsNvramRead_1(DfwCtl_tabNVRAM_1) (DfwCtl_AftsNvramRead_1(DfwCtl_tabNVRAM_1), RTE_E_OK)

#define Rte_Call_R_ProdElEm_AftsNvramWrite_1_op_CoEmSTT_AftsNvramWrite_1(ProdElEm_tabNvram_1) (RE_ProdElEm_AftsNvramWrite_1(ProdElEm_tabNvram_1), RTE_E_OK)

#define Rte_Call_R_ProdElEm_AftsNvramRead_1_op_ProdElEm_AftsNvramRead_1(ProdElEm_tabNvram_1) (RE_ProdElEm_AftsNvramRead_1(ProdElEm_tabNvram_1), RTE_E_OK)

#endif

#endif

/*------------------[port handle API mapping]--------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */

#endif

/*------------------[application errors]-------------------------------------*/

#define RTE_E_CallbackDCMRequestServices_E_OK 0U
#define RTE_E_CallbackDCMRequestServices_E_NOT_OK 1U
#define RTE_E_CallbackDCMRequestServices_E_PROTOCOL_NOT_ALLOWED 5U
#define RTE_E_CallbackDCMRequestServices_E_REQUEST_NOT_ACCEPTED 8U
#define RTE_E_CallbackDCMRequestServices_E_PENDING 10U
#define RTE_E_CallbackDCMRequestServices_E_FORCE_RCRRP 12U
#define RTE_E_ServiceRequestSupplierIndication_E_OK 0U
#define RTE_E_ServiceRequestSupplierIndication_E_NOT_OK 1U
#define RTE_E_ServiceRequestSupplierIndication_E_PROTOCOL_NOT_ALLOWED 5U
#define RTE_E_ServiceRequestSupplierIndication_E_REQUEST_NOT_ACCEPTED 8U
#define RTE_E_ServiceRequestSupplierIndication_E_PENDING 10U
#define RTE_E_ServiceRequestSupplierIndication_E_FORCE_RCRRP 12U
#define RTE_E_ServiceReqManufacturerIndication_E_OK 0U
#define RTE_E_ServiceReqManufacturerIndication_E_NOT_OK 1U
#define RTE_E_ServiceReqManufacturerIndication_E_PROTOCOL_NOT_ALLOWED 5U
#define RTE_E_ServiceReqManufacturerIndication_E_REQUEST_NOT_ACCEPTED 8U
#define RTE_E_ServiceReqManufacturerIndication_E_PENDING 10U
#define RTE_E_ServiceReqManufacturerIndication_E_FORCE_RCRRP 12U
#define RTE_E_ServiceReqManufSupplierIndication_E_OK 0U
#define RTE_E_ServiceReqManufSupplierIndication_E_NOT_OK 1U
#define RTE_E_ServiceReqManufSupplierIndication_E_PROTOCOL_NOT_ALLOWED 5U
#define RTE_E_ServiceReqManufSupplierIndication_E_REQUEST_NOT_ACCEPTED 8U
#define RTE_E_ServiceReqManufSupplierIndication_E_PENDING 10U
#define RTE_E_ServiceReqManufSupplierIndication_E_FORCE_RCRRP 12U
#define RTE_E_SecurityAccess_DcmDspSecurity02_E_OK 0U
#define RTE_E_SecurityAccess_DcmDspSecurity02_E_NOT_OK 1U
#define RTE_E_SecurityAccess_DcmDspSecurity02_E_PENDING 10U
#define RTE_E_SecurityAccess_DcmDspSecurity02_E_COMPARE_KEY_FAILED 11U
#define RTE_E_DTRServices_E_OK 0U
#define RTE_E_DTRServices_E_NOT_OK 1U
#define RTE_E_DTRServices_E_PENDING 10U
#define RTE_E_IF_DidServices_MPM_NVMID01_E_NOT_OK 1U
#define RTE_E_IF_DidServices_MPM_NVMID01_E_PENDING 10U
#define RTE_E_IF_DidServices_MPM_NVMID02_E_NOT_OK 1U
#define RTE_E_IF_DidServices_MPM_NVMID02_E_PENDING 10U
#define RTE_E_IF_DidServices_MPM_NVMID05_E_NOT_OK 1U
#define RTE_E_IF_DidServices_MPM_NVMID05_E_PENDING 10U
#define RTE_E_IF_DidServices_MPM_NVMID06_E_NOT_OK 1U
#define RTE_E_IF_DidServices_MPM_NVMID06_E_PENDING 10U
#define RTE_E_IF_RoutineServices_MPM_NVMID03_E_NOT_OK 1U
#define RTE_E_IF_RoutineServices_MPM_NVMID03_E_PENDING 10U
#define RTE_E_IF_RoutineServices_MPM_NVMID04_E_NOT_OK 1U
#define RTE_E_IF_RoutineServices_MPM_NVMID04_E_PENDING 10U
#define RTE_E_IF_RoutineServices_MPM_NVMID07_E_NOT_OK 1U
#define RTE_E_IF_RoutineServices_MPM_NVMID07_E_PENDING 10U
#define RTE_E_IF_RoutineServices_MPM_NVMID08_E_NOT_OK 1U
#define RTE_E_IF_RoutineServices_MPM_NVMID08_E_PENDING 10U
#define RTE_E_IF_MPM_SessionControl_E_SESSION_NOT_ALLOWED 4U
#define RTE_E_IF_MPM_SessionControl_E_PENDING 10U
#define RTE_E_IF_MPM_SessionControl_E_FORCE_RCRRP 12U
#define RTE_E_IF_MPM_SessionControl_E_NOT_OK 1U
#define RTE_E_IF_RoutineServices_AMgtT_NVMID03_E_NOT_OK 1U
#define RTE_E_IF_RoutineServices_AMgtT_NVMID03_E_PENDING 10U
#define RTE_E_IF_AFAMgtT_SessionControl_E_SESSION_NOT_ALLOWED 4U
#define RTE_E_IF_AFAMgtT_SessionControl_E_PENDING 10U
#define RTE_E_IF_AFAMgtT_SessionControl_E_FORCE_RCRRP 12U
#define RTE_E_IF_AFAMgtT_SessionControl_E_NOT_OK 1U

/*------------------[init values]--------------------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */

#endif

/*==================[type definitions]=======================================*/

/*------------------[instance handle type]-----------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */
typedef CONSTP2CONST(Rte_CDS_DCM_MANU, RTE_CONST, RTE_CONST) Rte_Instance;
#endif

/*------------------[port handle types]--------------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */
#endif

/*------------------[per instance memory types]------------------------------*/

#if (!defined RTE_CORE) /* if included by software component */

#endif

/*==================[external function declarations]=========================*/

/*------------------[declaration of runnable entities]-----------------------*/

#define RTE_START_SEC_APPLICATION_CORE1_APPL_CODE
#include "MemMap.h"

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_StartProtocol(UInt8 ProtocolID);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_StopProtocol(UInt8 ProtocolID);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_SupplierIndication(UInt8 SID, P2VAR(UInt8, AUTOMATIC, RTE_APPL_DATA) RequestData, UInt16 DataSize, UInt8 ReqType, UInt8 DcmRxPduId, P2VAR(UInt8, AUTOMATIC, RTE_APPL_DATA) ErrorCode);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_ManufacturerIndication(UInt8 SID, P2VAR(UInt8, AUTOMATIC, RTE_APPL_DATA) RequestData, UInt16 DataSize, UInt8 ReqType, UInt8 DcmRxPduId, P2VAR(UInt8, AUTOMATIC, RTE_APPL_DATA) ErrorCode);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_ManufSupplIndication(UInt8 SID, P2VAR(UInt8, AUTOMATIC, RTE_APPL_DATA) RequestData, UInt16 DataSize, UInt8 ReqType, UInt8 DcmRxPduId, P2VAR(UInt8, AUTOMATIC, RTE_APPL_DATA) ErrorCode);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_GetSeed_SecLevel_2(P2VAR(UInt8, AUTOMATIC, RTE_APPL_DATA) SecurityAccessDataRecord, Dcm_OpStatusType OpStatus, P2VAR(UInt8, AUTOMATIC, RTE_APPL_DATA) Seed, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_CompareKey_SecLevel_2(P2VAR(UInt8, AUTOMATIC, RTE_APPL_DATA) Key, Dcm_OpStatusType OpStatus);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_GetDTRValue_OBDMID01_TID01(Dcm_OpStatusType OpStatus, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Testval, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Minlimit, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Maxlimit, P2VAR(Dcm_DTRStatusType, AUTOMATIC, RTE_APPL_DATA) Status);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_GetDTRValue_OBDMID01_TID02(Dcm_OpStatusType OpStatus, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Testval, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Minlimit, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Maxlimit, P2VAR(Dcm_DTRStatusType, AUTOMATIC, RTE_APPL_DATA) Status);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_GetDTRValue_OBDMID01_TID03(Dcm_OpStatusType OpStatus, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Testval, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Minlimit, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Maxlimit, P2VAR(Dcm_DTRStatusType, AUTOMATIC, RTE_APPL_DATA) Status);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_GetDTRValue_OBDMID01_TID04(Dcm_OpStatusType OpStatus, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Testval, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Minlimit, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Maxlimit, P2VAR(Dcm_DTRStatusType, AUTOMATIC, RTE_APPL_DATA) Status);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_GetDTRValue_OBDMID01_TID07(Dcm_OpStatusType OpStatus, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Testval, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Minlimit, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Maxlimit, P2VAR(Dcm_DTRStatusType, AUTOMATIC, RTE_APPL_DATA) Status);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_GetDTRValue_OBDMID01_TID08(Dcm_OpStatusType OpStatus, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Testval, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Minlimit, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Maxlimit, P2VAR(Dcm_DTRStatusType, AUTOMATIC, RTE_APPL_DATA) Status);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_GetDTRValue_OBDMID01_TID0A(Dcm_OpStatusType OpStatus, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Testval, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Minlimit, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Maxlimit, P2VAR(Dcm_DTRStatusType, AUTOMATIC, RTE_APPL_DATA) Status);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_GetDTRValue_OBDMID01_TIDA0(Dcm_OpStatusType OpStatus, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Testval, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Minlimit, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Maxlimit, P2VAR(Dcm_DTRStatusType, AUTOMATIC, RTE_APPL_DATA) Status);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_GetDTRValue_OBDMID01_TIDA1(Dcm_OpStatusType OpStatus, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Testval, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Minlimit, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Maxlimit, P2VAR(Dcm_DTRStatusType, AUTOMATIC, RTE_APPL_DATA) Status);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_GetDTRValue_OBDMID02_TID01(Dcm_OpStatusType OpStatus, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Testval, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Minlimit, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Maxlimit, P2VAR(Dcm_DTRStatusType, AUTOMATIC, RTE_APPL_DATA) Status);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_GetDTRValue_OBDMID02_TID02(Dcm_OpStatusType OpStatus, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Testval, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Minlimit, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Maxlimit, P2VAR(Dcm_DTRStatusType, AUTOMATIC, RTE_APPL_DATA) Status);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_GetDTRValue_OBDMID02_TID03(Dcm_OpStatusType OpStatus, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Testval, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Minlimit, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Maxlimit, P2VAR(Dcm_DTRStatusType, AUTOMATIC, RTE_APPL_DATA) Status);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_GetDTRValue_OBDMID02_TID04(Dcm_OpStatusType OpStatus, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Testval, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Minlimit, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Maxlimit, P2VAR(Dcm_DTRStatusType, AUTOMATIC, RTE_APPL_DATA) Status);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_GetDTRValue_OBDMID02_TID07(Dcm_OpStatusType OpStatus, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Testval, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Minlimit, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Maxlimit, P2VAR(Dcm_DTRStatusType, AUTOMATIC, RTE_APPL_DATA) Status);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_GetDTRValue_OBDMID02_TID08(Dcm_OpStatusType OpStatus, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Testval, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Minlimit, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Maxlimit, P2VAR(Dcm_DTRStatusType, AUTOMATIC, RTE_APPL_DATA) Status);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_GetDTRValue_OBDMID02_TIDC0(Dcm_OpStatusType OpStatus, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Testval, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Minlimit, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Maxlimit, P2VAR(Dcm_DTRStatusType, AUTOMATIC, RTE_APPL_DATA) Status);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_GetDTRValue_OBDMID02_TIDC1(Dcm_OpStatusType OpStatus, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Testval, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Minlimit, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Maxlimit, P2VAR(Dcm_DTRStatusType, AUTOMATIC, RTE_APPL_DATA) Status);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_GetDTRValue_OBDMID02_TIDC2(Dcm_OpStatusType OpStatus, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Testval, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Minlimit, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Maxlimit, P2VAR(Dcm_DTRStatusType, AUTOMATIC, RTE_APPL_DATA) Status);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_GetDTRValue_OBDMID21_TID81(Dcm_OpStatusType OpStatus, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Testval, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Minlimit, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Maxlimit, P2VAR(Dcm_DTRStatusType, AUTOMATIC, RTE_APPL_DATA) Status);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_GetDTRValue_OBDMID41_TIDD0(Dcm_OpStatusType OpStatus, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Testval, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Minlimit, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Maxlimit, P2VAR(Dcm_DTRStatusType, AUTOMATIC, RTE_APPL_DATA) Status);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_GetDTRValue_OBDMID42_TIDDA(Dcm_OpStatusType OpStatus, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Testval, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Minlimit, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Maxlimit, P2VAR(Dcm_DTRStatusType, AUTOMATIC, RTE_APPL_DATA) Status);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_GetDTRValue_OBDMIDA2_TID0B(Dcm_OpStatusType OpStatus, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Testval, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Minlimit, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Maxlimit, P2VAR(Dcm_DTRStatusType, AUTOMATIC, RTE_APPL_DATA) Status);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_GetDTRValue_OBDMIDA2_TID0C(Dcm_OpStatusType OpStatus, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Testval, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Minlimit, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Maxlimit, P2VAR(Dcm_DTRStatusType, AUTOMATIC, RTE_APPL_DATA) Status);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_GetDTRValue_OBDMIDA3_TID0B(Dcm_OpStatusType OpStatus, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Testval, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Minlimit, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Maxlimit, P2VAR(Dcm_DTRStatusType, AUTOMATIC, RTE_APPL_DATA) Status);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_GetDTRValue_OBDMIDA3_TID0C(Dcm_OpStatusType OpStatus, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Testval, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Minlimit, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Maxlimit, P2VAR(Dcm_DTRStatusType, AUTOMATIC, RTE_APPL_DATA) Status);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_GetDTRValue_OBDMIDA4_TID0B(Dcm_OpStatusType OpStatus, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Testval, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Minlimit, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Maxlimit, P2VAR(Dcm_DTRStatusType, AUTOMATIC, RTE_APPL_DATA) Status);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_GetDTRValue_OBDMIDA4_TID0C(Dcm_OpStatusType OpStatus, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Testval, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Minlimit, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Maxlimit, P2VAR(Dcm_DTRStatusType, AUTOMATIC, RTE_APPL_DATA) Status);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_GetDTRValue_OBDMIDA5_TID0B(Dcm_OpStatusType OpStatus, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Testval, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Minlimit, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Maxlimit, P2VAR(Dcm_DTRStatusType, AUTOMATIC, RTE_APPL_DATA) Status);

extern FUNC(Std_ReturnType, RTE_APPL_CODE) DCM_MANU_GetDTRValue_OBDMIDA5_TID0C(Dcm_OpStatusType OpStatus, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Testval, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Minlimit, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) Maxlimit, P2VAR(Dcm_DTRStatusType, AUTOMATIC, RTE_APPL_DATA) Status);

extern FUNC(void, RTE_APPL_CODE) RE_DCM_MANU_StubServiceAftS(void);

#define RTE_STOP_SEC_APPLICATION_CORE1_APPL_CODE
#include "MemMap.h"

/*--------------[declaration of API functions provided by Rte]--------------*/

#define RTE_START_SEC_APPLICATION_CORE1_CODE
#include "MemMap.h"
#if (!defined(RTE_RUNNABLEAPI_RE_StartProtocol))  || (!defined(RTE_RUNNABLEAPI_RE_StopProtocol)) || (!defined(RTE_RUNNABLEAPI_RE_Supplier_Indication)) || (!defined(RTE_RUNNABLEAPI_RE_Manufacturer_Indication)) || (!defined(RTE_RUNNABLEAPI_RE_ManufSuppl_Indication)) || (!defined(RTE_RUNNABLEAPI_RE_GetSeed_SecLev02)) || (!defined(RTE_RUNNABLEAPI_RE_CompareKey_SecLev02)) || (!defined(RTE_RUNNABLEAPI_RE_OBDMID01TID01)) || (!defined(RTE_RUNNABLEAPI_RE_OBDMID01TID02)) || (!defined(RTE_RUNNABLEAPI_RE_OBDMID01TID03)) || (!defined(RTE_RUNNABLEAPI_RE_OBDMID01TID04)) || (!defined(RTE_RUNNABLEAPI_RE_OBDMID01TID07)) || (!defined(RTE_RUNNABLEAPI_RE_OBDMID01TID08)) || (!defined(RTE_RUNNABLEAPI_RE_OBDMID01TID0A)) || (!defined(RTE_RUNNABLEAPI_RE_OBDMID01TIDA0)) || (!defined(RTE_RUNNABLEAPI_RE_OBDMID01TIDA1)) || (!defined(RTE_RUNNABLEAPI_RE_OBDMID02TID01)) || (!defined(RTE_RUNNABLEAPI_RE_OBDMID02TID02)) || (!defined(RTE_RUNNABLEAPI_RE_OBDMID02TID03)) || (!defined(RTE_RUNNABLEAPI_RE_OBDMID02TID04)) || (!defined(RTE_RUNNABLEAPI_RE_OBDMID02TID07)) || (!defined(RTE_RUNNABLEAPI_RE_OBDMID02TID08)) || (!defined(RTE_RUNNABLEAPI_RE_OBDMID02TIDC0)) || (!defined(RTE_RUNNABLEAPI_RE_OBDMID02TIDC1)) || (!defined(RTE_RUNNABLEAPI_RE_OBDMID02TIDC2)) || (!defined(RTE_RUNNABLEAPI_RE_OBDMID21TID81)) || (!defined(RTE_RUNNABLEAPI_RE_OBDMID41TIDD0)) || (!defined(RTE_RUNNABLEAPI_RE_OBDMID42TIDDA)) || (!defined(RTE_RUNNABLEAPI_RE_OBDMIDA2TID0B)) || (!defined(RTE_RUNNABLEAPI_RE_OBDMIDA2TID0C)) || (!defined(RTE_RUNNABLEAPI_RE_OBDMIDA3TID0B)) || (!defined(RTE_RUNNABLEAPI_RE_OBDMIDA3TID0C)) || (!defined(RTE_RUNNABLEAPI_RE_OBDMIDA4TID0B)) || (!defined(RTE_RUNNABLEAPI_RE_OBDMIDA4TID0C)) || (!defined(RTE_RUNNABLEAPI_RE_OBDMIDA5TID0B)) || (!defined(RTE_RUNNABLEAPI_RE_OBDMIDA5TID0C))
#endif

#define RTE_STOP_SEC_APPLICATION_CORE1_CODE
#include "MemMap.h"

/*--------------[declaration of API functions provided by other Appl]--------*/

#define RTE_START_SEC_APPLICATION_CORE1_APPL_CODE
#include "MemMap.h"

#if (!defined RTE_CORE) /* if included by software component */

#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(void, RTE_APPL_CODE) RE_CoStopStart_AftsNvramRead_1 (P2VAR(CoStopStart_tabNvram_Type1, AUTOMATIC, RTE_APPL_DATA) CoStopStart_tabNvram_1);
#else
extern FUNC(void, RTE_APPL_CODE) RE_CoStopStart_AftsNvramRead_1 (P2VAR(UInt8, AUTOMATIC, RTE_APPL_DATA) CoStopStart_tabNvram_1);
#endif
#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(void, RTE_APPL_CODE) RE_CoStopStart_AftsNvramWrite_1 (P2CONST(CoStopStart_tabNvram_Type1, AUTOMATIC, RTE_APPL_CONST) CoStopStart_tabNvram_1);
#else
extern FUNC(void, RTE_APPL_CODE) RE_CoStopStart_AftsNvramWrite_1 (P2CONST(UInt8, AUTOMATIC, RTE_APPL_CONST) CoStopStart_tabNvram_1);
#endif
#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(void, RTE_APPL_CODE) RE_CoEmSTT_AftsNvramRead_1 (P2VAR(CoEmSTT_tabNvram_Type1, AUTOMATIC, RTE_APPL_DATA) CoEmSTT_tabNvram_1);
#else
extern FUNC(void, RTE_APPL_CODE) RE_CoEmSTT_AftsNvramRead_1 (P2VAR(UInt8, AUTOMATIC, RTE_APPL_DATA) CoEmSTT_tabNvram_1);
#endif
#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(void, RTE_APPL_CODE) RE_CoEmSTT_AftsNvramWrite_1 (P2CONST(CoEmSTT_tabNvram_Type1, AUTOMATIC, RTE_APPL_CONST) CoEmSTT_tabNvram_1);
#else
extern FUNC(void, RTE_APPL_CODE) RE_CoEmSTT_AftsNvramWrite_1 (P2CONST(UInt8, AUTOMATIC, RTE_APPL_CONST) CoEmSTT_tabNvram_1);
#endif
#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(void, RTE_APPL_CODE) RE_StopStrtEm_AftsNvramRead_1 (P2VAR(StopStrtEm_tabNvram_Type1, AUTOMATIC, RTE_APPL_DATA) StopStrtEm_tabNvram_1);
#else
extern FUNC(void, RTE_APPL_CODE) RE_StopStrtEm_AftsNvramRead_1 (P2VAR(UInt8, AUTOMATIC, RTE_APPL_DATA) StopStrtEm_tabNvram_1);
#endif
#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(void, RTE_APPL_CODE) RE_StopStrtEm_AftsNvramWrite_1 (P2CONST(StopStrtEm_tabNvram_Type1, AUTOMATIC, RTE_APPL_CONST) StopStrtEm_tabNvram_1);
#else
extern FUNC(void, RTE_APPL_CODE) RE_StopStrtEm_AftsNvramWrite_1 (P2CONST(UInt8, AUTOMATIC, RTE_APPL_CONST) StopStrtEm_tabNvram_1);
#endif
#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(void, RTE_APPL_CODE) RE_ProdElEng_AftsNvramRead_1 (P2VAR(ProdElEng_tabNvram_Type1, AUTOMATIC, RTE_APPL_DATA) ProdElEng_tabNvram_1);
#else
extern FUNC(void, RTE_APPL_CODE) RE_ProdElEng_AftsNvramRead_1 (P2VAR(UInt8, AUTOMATIC, RTE_APPL_DATA) ProdElEng_tabNvram_1);
#endif
#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(void, RTE_APPL_CODE) RE_ProdElEng_AftsNvramWrite_1 (P2CONST(ProdElEng_tabNvram_Type1, AUTOMATIC, RTE_APPL_CONST) ProdElEng_tabNvram_1);
#else
extern FUNC(void, RTE_APPL_CODE) RE_ProdElEng_AftsNvramWrite_1 (P2CONST(UInt8, AUTOMATIC, RTE_APPL_CONST) ProdElEng_tabNvram_1);
#endif
#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(void, RTE_APPL_CODE) RE_ThMgt_AftsNvramRead_1 (P2VAR(ThMgt_tabNvram_Type1, AUTOMATIC, RTE_APPL_DATA) ThMgt_tabNVRAM_1);
#else
extern FUNC(void, RTE_APPL_CODE) RE_ThMgt_AftsNvramRead_1 (P2VAR(UInt8, AUTOMATIC, RTE_APPL_DATA) ThMgt_tabNVRAM_1);
#endif
#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(void, RTE_APPL_CODE) RE_ThMgt_AftsNvramWrite_1 (P2CONST(ThMgt_tabNvram_Type1, AUTOMATIC, RTE_APPL_CONST) ThMgt_tabNVRAM_1);
#else
extern FUNC(void, RTE_APPL_CODE) RE_ThMgt_AftsNvramWrite_1 (P2CONST(UInt8, AUTOMATIC, RTE_APPL_CONST) ThMgt_tabNVRAM_1);
#endif
#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_APPL_CODE) RE_MPM_AftsNvmRead (UInt8 pdav0, P2VAR(Array_12_UInt8, AUTOMATIC, RTE_APPL_DATA) data);
#else
extern FUNC(Std_ReturnType, RTE_APPL_CODE) RE_MPM_AftsNvmRead (UInt8 pdav0, P2VAR(UInt8, AUTOMATIC, RTE_APPL_DATA) data);
#endif
#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_APPL_CODE) RE_MPM_AftsNvmWrite (UInt8 pdav0, P2CONST(Array_12_UInt8, AUTOMATIC, RTE_APPL_CONST) data, UInt16 dataLength, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
extern FUNC(Std_ReturnType, RTE_APPL_CODE) RE_MPM_AftsNvmWrite (UInt8 pdav0, P2CONST(UInt8, AUTOMATIC, RTE_APPL_CONST) data, UInt16 dataLength, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#endif
extern FUNC(Std_ReturnType, RTE_APPL_CODE) RE_MPM_AftsNvmChkRead (UInt8 pdav0, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
extern FUNC(Std_ReturnType, RTE_APPL_CODE) RE_MPM_AftsNvmChkWrite (UInt8 pdav0, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
extern FUNC(Std_ReturnType, RTE_APPL_CODE) RE_MPM_AftsNvmRDL (UInt8 pdav0, P2VAR(UInt16, AUTOMATIC, RTE_APPL_DATA) DidLength);
#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_APPL_CODE) RE_MPM_RstStart (UInt8 pdav0, P2CONST(Array_1_UInt8_m1, AUTOMATIC, RTE_APPL_CONST) InBuffer, P2VAR(Array_1_UInt8_m1, AUTOMATIC, RTE_APPL_DATA) OutBuffer, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
extern FUNC(Std_ReturnType, RTE_APPL_CODE) RE_MPM_RstStart (UInt8 pdav0, P2CONST(UInt8, AUTOMATIC, RTE_APPL_CONST) InBuffer, P2VAR(UInt8, AUTOMATIC, RTE_APPL_DATA) OutBuffer, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#endif
#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_APPL_CODE) RE_MPM_RstRqResults (UInt8 pdav0, P2VAR(Array_1_UInt8_m1, AUTOMATIC, RTE_APPL_DATA) OutBuffer, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
extern FUNC(Std_ReturnType, RTE_APPL_CODE) RE_MPM_RstRqResults (UInt8 pdav0, P2VAR(UInt8, AUTOMATIC, RTE_APPL_DATA) OutBuffer, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#endif
extern FUNC(Std_ReturnType, RTE_APPL_CODE) RE_MPM_AftsGetSesChgPerm (Dcm_SesCtrlType SesCtrlTypeActive, Dcm_SesCtrlType SesCtrlTypeNew);
extern FUNC(Std_ReturnType, RTE_APPL_CODE) RE_MPM_AftsSesChgInd (Dcm_SesCtrlType SesCtrlTypeOld, Dcm_SesCtrlType SesCtrlTypeNew);
#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_APPL_CODE) RE_AFAMgtT_RstStart (UInt8 pdav0, P2CONST(Array_1_UInt8, AUTOMATIC, RTE_APPL_CONST) InBuffer, P2VAR(Array_1_UInt8, AUTOMATIC, RTE_APPL_DATA) OutBuffer, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
extern FUNC(Std_ReturnType, RTE_APPL_CODE) RE_AFAMgtT_RstStart (UInt8 pdav0, P2CONST(UInt8, AUTOMATIC, RTE_APPL_CONST) InBuffer, P2VAR(UInt8, AUTOMATIC, RTE_APPL_DATA) OutBuffer, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#endif
#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(Std_ReturnType, RTE_APPL_CODE) RE_AFAMgtT_RstRqResults (UInt8 pdav0, P2VAR(Array_1_UInt8, AUTOMATIC, RTE_APPL_DATA) OutBuffer, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#else
extern FUNC(Std_ReturnType, RTE_APPL_CODE) RE_AFAMgtT_RstRqResults (UInt8 pdav0, P2VAR(UInt8, AUTOMATIC, RTE_APPL_DATA) OutBuffer, P2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
#endif
extern FUNC(Std_ReturnType, RTE_APPL_CODE) RE_AFAMgtT_AftsGetSesChgPerm (Dcm_SesCtrlType SesCtrlTypeActive, Dcm_SesCtrlType SesCtrlTypeNew);
extern FUNC(Std_ReturnType, RTE_APPL_CODE) RE_AFAMgtT_AftsSesChgInd (Dcm_SesCtrlType SesCtrlTypeOld, Dcm_SesCtrlType SesCtrlTypeNew);
extern FUNC(void, RTE_APPL_CODE) DfwCtl_AftsNvramRead_1 (P2VAR(UInt8, AUTOMATIC, RTE_APPL_DATA) DfwCtl_tabNVRAM_1);
#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(void, RTE_APPL_CODE) RE_ProdElEm_AftsNvramWrite_1 (P2CONST(ProdElEm_tabNvram_Type1, AUTOMATIC, RTE_APPL_CONST) ProdElEm_tabNvram_1);
#else
extern FUNC(void, RTE_APPL_CODE) RE_ProdElEm_AftsNvramWrite_1 (P2CONST(UInt8, AUTOMATIC, RTE_APPL_CONST) ProdElEm_tabNvram_1);
#endif
#ifdef RTE_PTR2ARRAYTYPE_PASSING
extern FUNC(void, RTE_APPL_CODE) RE_ProdElEm_AftsNvramRead_1 (P2VAR(ProdElEm_tabNvram_Type1, AUTOMATIC, RTE_APPL_DATA) ProdElEm_tabNvram_1);
#else
extern FUNC(void, RTE_APPL_CODE) RE_ProdElEm_AftsNvramRead_1 (P2VAR(UInt8, AUTOMATIC, RTE_APPL_DATA) ProdElEm_tabNvram_1);
#endif

#endif /* (!defined RTE_CORE) */

#define RTE_STOP_SEC_APPLICATION_CORE1_APPL_CODE
#include "MemMap.h"

/*==================[internal function declarations]=========================*/

/*==================[external constants]=====================================*/

/*------------------[instance handle declaration]----------------------------*/
#define RTE_START_SEC_APPLICATION_CORE1_CONST_UNSPECIFIED
#include "MemMap.h"

extern CONSTP2CONST(Rte_CDS_DCM_MANU, RTE_CONST, RTE_CONST) Rte_Inst_DCM_MANU;

#define RTE_STOP_SEC_APPLICATION_CORE1_CONST_UNSPECIFIED
#include "MemMap.h"

/*==================[internal constants]=====================================*/

/*==================[external data]==========================================*/

/*==================[internal data]==========================================*/

/*==================[external function definitions]==========================*/

/*==================[internal function definitions]==========================*/

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */
/** @} doxygen end group definition */
#endif /* !defined(RTE_DCM_MANU_H) */
/*==================[end of file]============================================*/

