/**************************************************************************************************\
 *** 
 *** Simulink model       : CoStall_01460_10_02170_TL
 *** TargetLink subsystem : CoStall_01460_10_02170_TL/ASE_002
 *** Codefile             : ase_002_tev_fct.h
 ***
 *** Generated by TargetLink, the dSPACE production quality code generator
 *** Generation date: 2011-05-23 12:51:03
 ***
 *** CODE GENERATOR OPTIONS:
 *** Compiler                            : <unknown>
 *** Target                              : Generic
 *** ANSI-C compatible code              : yes
 *** Optimization level                  : 2
 *** Constant style                      : decimal
 *** Clean code option                   : enabled
 *** Logging mode                        : Do not log anything
 *** Linker sections                     : enabled
 *** Assembler statements                : disabled
 *** Variable name length                : 31 chars
 *** Use global bitfields                : disabled
 *** Stateflow: use of bitfields         : enabled
 *** State activity encoding limit       : 5
 *** Omit zero inits in restart function : disabled
 *** Share fcns between TL subsystems    : enabled
 *** Generate 64bit functions            : enabled
 *** Inlining Threshold                  : 6
 *** Line break limit                    : 100
 *** Target optimized boolean data type  : enabled
 *** Keep saturation elements            : disabled
 *** Extended variable sharing           : enabled
 *** Style definition file               : C:\dSPACE301\Matlab\Tl\config\codegen\cconfig.xml
 *** Root style sheet                    : C:\dSPACE301\Matlab\Tl\XML\CodeGen\Stylesheets\TL_CSource
 ***                                       CodeSS.xsl
 *** Enable Multirate codegeneration     : disabled
 *** Add model checksum                  : disabled
 ***
 *** TargetLink version      : 3.0.1 from 26-May-2009
 *** Code generator version  : Build Id 3.0.1.7 from 2009-May-06 15:28:18
 *** Copyright (c) 2006 dSPACE GmbH
\**************************************************************************************************/

#ifndef _ASE_002_TEV_FCT_H_
#define _ASE_002_TEV_FCT_H_

/*----------------------------------------------------------------------------*\
  DEFINES (OPT)
\*----------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------*\
  INCLUDES
\*----------------------------------------------------------------------------*/
#include "tl_defines.h"
#include "tl_basetypes.h"
/*----------------------------------------------------------------------------*\
  DEFINES
\*----------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------*\
  TYPEDEFS
\*----------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------*\
  ENUMS
\*----------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------*\
  VARIABLES
\*----------------------------------------------------------------------------*/

#define ASE_START_SEC_GLOBAL_16BIT
#include "ASE_MemMap.h"
/******************************************************************************\
   AR_IF_GLOBAL_16BIT: Global 16 bits for AUTOSAR modules | Width: 16
\******************************************************************************/
extern AR_IF_GLOBAL_16BIT UInt16 RE_ASE_002_TEV_CoASE_spdVeh_in /* 
   Unit       : km/h
   Description: Vitesse véhicule traitée
   LSB: 2^-7 OFF:  0 MIN/MAX:  0 .. 500 */;

#define ASE_STOP_SEC_GLOBAL_16BIT
#include "ASE_MemMap.h"

#define ASE_START_SEC_GLOBAL_8BIT
#include "ASE_MemMap.h"

/******************************************************************************\
   AR_IF_GLOBAL_8BIT: Global 8 bits for AUTOSAR modules | Width: 8
\******************************************************************************/
extern AR_IF_GLOBAL_8BIT UInt8 ASE_002_CoPTStNew_stEng_in /* 
   Description: Nouvel état moteur
   LSB: 2^0 OFF:  0 MIN/MAX:  1 .. 9 */;
extern AR_IF_GLOBAL_8BIT UInt8 ASE_002_CoPtUH_stPwt_in /* 
   Description: Etat GMP UH
   LSB: 2^0 OFF:  0 MIN/MAX:  0 .. 15 */;
extern AR_IF_GLOBAL_8BIT UInt8 RE_ASE_002_TEV_CoASE_stEngASEReqClas_in /* 
   Description: Classe la plus élevée des demandes de Sortie calage présentes
   LSB: 2^0 OFF:  0 MIN/MAX:  0 .. 5 */;

#define ASE_STOP_SEC_GLOBAL_8BIT
#include "ASE_MemMap.h"

#define ASE_START_SEC_GLOBAL_BOOLEAN
#include "ASE_MemMap.h"

/******************************************************************************\
   AR_IF_GLOBAL_BOOLEAN: Global boolean for AUTOSAR modules | Width: 8
\******************************************************************************/
extern AR_IF_GLOBAL_BOOLEAN Boolean ASE_002_CoEmSTT_bEngASERstrtReq_in /* 
   Description: Demande de redémarrage  SCAr par sous-système ElectroMécanique
   LSB: 2^0 OFF:  0 MIN/MAX:  0 .. 1 */;
extern AR_IF_GLOBAL_BOOLEAN Boolean ASE_002_CoEmSTT_bEngStallAuth_in /* 
   Description: Autorisation d'entrée en SCAr par le SEEM
   LSB: 2^0 OFF:  0 MIN/MAX:  0 .. 1 */;
extern AR_IF_GLOBAL_BOOLEAN Boolean ASE_002_CoPtUH_bBltStopAuth_in /* 
   Description: Autorisation arret par glissement façade Dim = 1x1
   LSB: 2^0 OFF:  0 MIN/MAX:  0 .. 1 */;
extern AR_IF_GLOBAL_BOOLEAN Boolean ASE_002_CoPtUH_bCompTqRStrt_in /* 
   Description: Pour APV, Résultat de la comparaison des couples de redem nécessaire et disponible
   LSB: 2^0 OFF:  0 MIN/MAX:  0 .. 1 */;
extern AR_IF_GLOBAL_BOOLEAN Boolean ASE_002_CoPtUH_bEngStallReq_in /* 
   Description: Demande d'entrée en SCA
   LSB: 2^0 OFF:  0 MIN/MAX:  0 .. 1 */;
extern AR_IF_GLOBAL_BOOLEAN Boolean ASE_002_CoPtUH_bFbSpcFactSTTReq1_in /* 
   Description: Pour APV, Retour sur la dmd des inhibitions des interdictions d'arrêt
   LSB: 2^0 OFF:  0 MIN/MAX:  0 .. 1 */;
extern AR_IF_GLOBAL_BOOLEAN Boolean ASE_002_CoPtUH_bFbSpcFactSTTReq2_in /* 
   Description: Pour APV. Retour sur la dmd d'inhibitions du stop Dim = 1x1
   LSB: 2^0 OFF:  0 MIN/MAX:  0 .. 1 */;
extern AR_IF_GLOBAL_BOOLEAN Boolean ASE_002_CoPtUH_bLimFreqStopInh_in /* 
   Description: Besoin limitation de frequence arret
   LSB: 2^0 OFF:  0 MIN/MAX:  0 .. 1 */;
extern AR_IF_GLOBAL_BOOLEAN Boolean ASE_002_CoPtUH_bRStrtReqDgoBlt_in /* 
   Description: Demande de redémarrage par FGC
   LSB: 2^0 OFF:  0 MIN/MAX:  0 .. 1 */;
extern AR_IF_GLOBAL_BOOLEAN Boolean ASE_002_CoReqCha_bEngASERstrtReq_in /* 
   Description: Demande de redémarrage  SCAr par sous-système Frein
   LSB: 2^0 OFF:  0 MIN/MAX:  0 .. 1 */;
extern AR_IF_GLOBAL_BOOLEAN Boolean ASE_002_CoReqCha_bEngStallAuth_in /* 
   Description: Autorisation d'entrée en SCAr par sous-système Frein
   LSB: 2^0 OFF:  0 MIN/MAX:  0 .. 1 */;
extern AR_IF_GLOBAL_BOOLEAN Boolean ASE_002_CoReqDamp_bEngStallAuth_in /* 
   Description: Autorisation d'entrée en SCAr par sous-système Suspension
   LSB: 2^0 OFF:  0 MIN/MAX:  0 .. 1 */;
extern AR_IF_GLOBAL_BOOLEAN Boolean ASE_002_CoReqStg_bEngASERstrtReq_in /* 
   Description: Demande de redémarrage  SCAr par sous-système DA
   LSB: 2^0 OFF:  0 MIN/MAX:  0 .. 1 */;
extern AR_IF_GLOBAL_BOOLEAN Boolean ASE_002_CoReqStg_bEngStallAuth_in /* 
   Description: Autorisation d'entrée en SCAr par sous-système DA
   LSB: 2^0 OFF:  0 MIN/MAX:  0 .. 1 */;
extern AR_IF_GLOBAL_BOOLEAN Boolean ASE_002_CoReqVeh_bEngASERstrtReq_in /* 
   Description: Demande de redémarrage  SCAr par sous-système Habitacle
   LSB: 2^0 OFF:  0 MIN/MAX:  0 .. 1 */;
extern AR_IF_GLOBAL_BOOLEAN Boolean ASE_002_CoReqVeh_bEngStallAuth_in /* 
   Description: Autorisation d'entrée en SCAr par sous-système Habitacle
   LSB: 2^0 OFF:  0 MIN/MAX:  0 .. 1 */;
extern AR_IF_GLOBAL_BOOLEAN Boolean ASE_002_EngReqH_bEngStallAuth_in /* 
   Description: Autorisation d'entree en SCAr par sous-système Moteur (A1 : Autorisation_entrée_SCAr
   _Moteur) Dim = 1x1
   LSB: 2^0 OFF:  0 MIN/MAX:  0 .. 1 */;
extern AR_IF_GLOBAL_BOOLEAN Boolean ASE_002_FRM_bAcvCutCoPtASE_in /* 
   Description: Demande de coupure si le moteur est calé (FRM SCAr type 3)
   LSB: 2^0 OFF:  0 MIN/MAX:  0 .. 1 */;
extern AR_IF_GLOBAL_BOOLEAN Boolean ASE_002_FRM_bAcvFastRstrtCoPtASE_in /* 
   Description: Reconfiguration SCAr type 2.2 (redemarrage urgent)
   LSB: 2^0 OFF:  0 MIN/MAX:  0 .. 1 */;
extern AR_IF_GLOBAL_BOOLEAN Boolean ASE_002_FRM_bAcvRstrtCoPtASE_in /* 
   Description: Reconfiguration SCAr type 2.1 (redem classique)
   LSB: 2^0 OFF:  0 MIN/MAX:  0 .. 1 */;
extern AR_IF_GLOBAL_BOOLEAN Boolean RE_ASE_002_TEV_MgtStall_bStallAuthNbASE_in /* 
   Description: Autorisation d'entrer en Sortie calage par nombre de tentatives de Sortie calage
   LSB: 2^0 OFF:  0 MIN/MAX:  0 .. 1 */;
extern AR_IF_GLOBAL_BOOLEAN Boolean RE_ASE_002_TEV_MgtStall_bStallAuthNbRstrt_in /* 
   Description: Autorisation d'entrer en Sortie calage par nombre de tentatives de redémarage en STT
    et en SCAr
   LSB: 2^0 OFF:  0 MIN/MAX:  0 .. 1 */;

#define ASE_STOP_SEC_GLOBAL_BOOLEAN
#include "ASE_MemMap.h"

#define ASE_START_SEC_GLOBAL_BOOLEAN
#include "ASE_MemMap.h"

/******************************************************************************\
   AR_IF_GLOBAL_BOOLEAN_IRV: Global boolean for AUTOSAR modules | Width: 8
\******************************************************************************/
extern Boolean CoStall_bEngStallAuth /* 
   Description: Autorisation d'entrer dans la fonction Sortie calage
   LSB: 2^0 OFF:  0 MIN/MAX:  0 .. 1 */;
extern Boolean CoStall_bEngStallReq /* 
   Description: Demande d'entrée dans la fonction Sortie calage
   LSB: 2^0 OFF:  0 MIN/MAX:  0 .. 1 */;

#define ASE_STOP_SEC_GLOBAL_BOOLEAN
#include "ASE_MemMap.h"

/*----------------------------------------------------------------------------*\
  PARAMETERIZED MACROS
\*----------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------*\
  FUNCTION PROTOTYPES
\*----------------------------------------------------------------------------*/
/******************************************************************************\
   AR_GLOBAL_FCN: Function class
\******************************************************************************/
extern Void ASE_001_MSE_ini(Void);
extern Void ASE_002_TEV_fct(Void);

/******************************************************************************\
   UserGlobalRestart: static function(s) (invisible for other module)
\******************************************************************************/
extern Void ASE_002_FctVarInit(Void);


#endif/*_ASE_002_TEV_FCT_H_ */
/*----------------------------------------------------------------------------*\
  END OF FILE
\*----------------------------------------------------------------------------*/
