#if !defined(RTE_HOOK_H)
#define RTE_HOOK_H

/**
 * \file
 *
 * \brief AUTOSAR Rte
 *
 * This file contains the implementation of the AUTOSAR
 * module Rte.
 *
 * \author Elektrobit Automotive GmbH, 91058 Erlangen, Germany
 *
 * Copyright 2005 - 2013 Elektrobit Automotive GmbH
 * All rights exclusively reserved for Elektrobit Automotive GmbH,
 * unless expressly agreed to otherwise.
 */

 /*
  * This file contains Rte hook declarations
  *
  * This file has been automatically generated by
  * EB tresos AutoCore Rte Generator Version 6.1.57
  * on Mon Nov 03 12:24:24 CET 2014. !!!IGNORE-LINE!!!
  */

 /* \addtogroup Rte Runtime Environment
  * @{ */

/*==================[inclusions]=============================================*/

#include <Rte_Cfg.h>         /* RTE header file */
#include <Os.h>              /* OS header file */
#include <Rte_Type.h>     /* Rte type definitions header file */
#include <Rte_VirtualComponent_Hook.h>      /* hook header file of component VirtualComponent */
#include <Rte_AIRSYSTRB_Hook.h>      /* hook header file of component AIRSYSTRB */
#include <Rte_DMPVLV_H_Hook.h>      /* hook header file of component DMPVLV_H */
#include <Rte_PNMACT_Hook.h>      /* hook header file of component PNMACT */
#include <Rte_TRBACTGSL_Hook.h>      /* hook header file of component TRBACTGSL */
#include <Rte_TRBACTMGT_Hook.h>      /* hook header file of component TRBACTMGT */
#include <Rte_TRBACTSYS_Hook.h>      /* hook header file of component TRBACTSYS */
#include <Rte_OILSYS_Hook.h>      /* hook header file of component OILSYS */
#include <Rte_ACCMD_Hook.h>      /* hook header file of component ACCMD */
#include <Rte_ADVCORDT_Hook.h>      /* hook header file of component ADVCORDT */
#include <Rte_ADVMAXT_Hook.h>      /* hook header file of component ADVMAXT */
#include <Rte_ADVMINT_Hook.h>      /* hook header file of component ADVMINT */
#include <Rte_ADVOPTMT_Hook.h>      /* hook header file of component ADVOPTMT */
#include <Rte_ADVPREVKNKT_Hook.h>      /* hook header file of component ADVPREVKNKT */
#include <Rte_ADVSPT_Hook.h>      /* hook header file of component ADVSPT */
#include <Rte_AFAMGTT_Hook.h>      /* hook header file of component AFAMGTT */
#include <Rte_AFAT_Hook.h>      /* hook header file of component AFAT */
#include <Rte_AIREFCENGCYLPRMT_Hook.h>      /* hook header file of component AIREFCENGCYLPRMT */
#include <Rte_AIRSYSAIR_Hook.h>      /* hook header file of component AIRSYSAIR */
#include <Rte_ASE_Hook.h>      /* hook header file of component ASE */
#include <Rte_COCLLASL_Hook.h>      /* hook header file of component COCLLASL */
#include <Rte_COEMSTT_Hook.h>      /* hook header file of component COEMSTT */
#include <Rte_COGBX_Hook.h>      /* hook header file of component COGBX */
#include <Rte_COSTOPSTART_Hook.h>      /* hook header file of component COSTOPSTART */
#include <Rte_COTQ_Hook.h>      /* hook header file of component COTQ */
#include <Rte_CURDRIVFIL_Hook.h>      /* hook header file of component CURDRIVFIL */
#include <Rte_DFWCTL_Hook.h>      /* hook header file of component DFWCTL */
#include <Rte_ENGLIM_Hook.h>      /* hook header file of component ENGLIM */
#include <Rte_ENGLIMTQT_Hook.h>      /* hook header file of component ENGLIMTQT */
#include <Rte_ENGMGSLLIM_Hook.h>      /* hook header file of component ENGMGSLLIM */
#include <Rte_ENGMGSLT_Hook.h>      /* hook header file of component ENGMGSLT */
#include <Rte_EOMGSL_Hook.h>      /* hook header file of component EOMGSL */
#include <Rte_EXMGSLT1_Hook.h>      /* hook header file of component EXMGSLT1 */
#include <Rte_EXMGSLT2_Hook.h>      /* hook header file of component EXMGSLT2 */
#include <Rte_FARSP_Hook.h>      /* hook header file of component FARSP */
#include <Rte_FISA_Hook.h>      /* hook header file of component FISA */
#include <Rte_GSI_Hook.h>      /* hook header file of component GSI */
#include <Rte_INMDLT_Hook.h>      /* hook header file of component INMDLT */
#include <Rte_INTHMDLT_Hook.h>      /* hook header file of component INTHMDLT */
#include <Rte_MPM_Hook.h>      /* hook header file of component MPM */
#include <Rte_PFILFAST_Hook.h>      /* hook header file of component PFILFAST */
#include <Rte_PFILSLOW_Hook.h>      /* hook header file of component PFILSLOW */
#include <Rte_PRODELEM_Hook.h>      /* hook header file of component PRODELEM */
#include <Rte_PRODELENG_Hook.h>      /* hook header file of component PRODELENG */
#include <Rte_RCD_Hook.h>      /* hook header file of component RCD */
#include <Rte_STOPSTRTEM_Hook.h>      /* hook header file of component STOPSTRTEM */
#include <Rte_STOPSTRTENG_Hook.h>      /* hook header file of component STOPSTRTENG */
#include <Rte_THMGT_Hook.h>      /* hook header file of component THMGT */
#include <Rte_THRSPT_Hook.h>      /* hook header file of component THRSPT */
#include <Rte_TPM_Hook.h>      /* hook header file of component TPM */
#include <Rte_TQADPCMP_Hook.h>      /* hook header file of component TQADPCMP */
#include <Rte_TQDEM_Hook.h>      /* hook header file of component TQDEM */
#include <Rte_TQEM_Hook.h>      /* hook header file of component TQEM */
#include <Rte_TQTREAT_Hook.h>      /* hook header file of component TQTREAT */
#include <Rte_TRABVX_Hook.h>      /* hook header file of component TRABVX */
#include <Rte_USTHRMT_Hook.h>      /* hook header file of component USTHRMT */
#include <Rte_VSCO_Hook.h>      /* hook header file of component VSCO */
#include <Rte_VSINFO_Hook.h>      /* hook header file of component VSINFO */
#include <Rte_VSLIM_Hook.h>      /* hook header file of component VSLIM */
#include <Rte_VSMAX_Hook.h>      /* hook header file of component VSMAX */
#include <Rte_VSREG_Hook.h>      /* hook header file of component VSREG */
#include <Rte_VSSP_Hook.h>      /* hook header file of component VSSP */
#include <Rte_EBSTUB_Hook.h>      /* hook header file of component EBSTUB */
#include <Rte_ACQADC_Hook.h>      /* hook header file of component ACQADC */
#include <Rte_ACQADC_DT_Hook.h>      /* hook header file of component ACQADC_DT */
#include <Rte_ACQCMDDIO_Hook.h>      /* hook header file of component ACQCMDDIO */
#include <Rte_ACQDGOHAL_Hook.h>      /* hook header file of component ACQDGOHAL */
#include <Rte_ACQDGOHAL_DT_Hook.h>      /* hook header file of component ACQDGOHAL_DT */
#include <Rte_ACQPWD_Hook.h>      /* hook header file of component ACQPWD */
#include <Rte_CatAcvDiagT_Hook.h>      /* hook header file of component CatAcvDiagT */
#include <Rte_CatPasDiagT_Hook.h>      /* hook header file of component CatPasDiagT */
#include <Rte_CMDDIO_DT_Hook.h>      /* hook header file of component CMDDIO_DT */
#include <Rte_CMDPWMACT_DT_Hook.h>      /* hook header file of component CMDPWMACT_DT */
#include <Rte_DCM_MANU_Hook.h>      /* hook header file of component DCM_MANU */
#include <Rte_DCM_Hook.h>      /* hook header file of component DCM */
#include <Rte_FRunTime1_Hook.h>      /* hook header file of component FRunTime1 */
#include <Rte_FRunTime2_Hook.h>      /* hook header file of component FRunTime2 */
#include <Rte_HPPMPACTCMDACQ_DT_Hook.h>      /* hook header file of component HPPMPACTCMDACQ_DT */
#include <Rte_Immo_Hook.h>      /* hook header file of component Immo */
#include <Rte_INJCMD_Hook.h>      /* hook header file of component INJCMD */
#include <Rte_LAYERSYNC_Hook.h>      /* hook header file of component LAYERSYNC */
#include <Rte_OILLVLHALACQ_DT_Hook.h>      /* hook header file of component OILLVLHALACQ_DT */
#include <Rte_Dem_Hook.h>      /* hook header file of component Dem */
#include <Rte_Fim_Hook.h>      /* hook header file of component Fim */
#include <Rte_SYNCCKDIAG_Hook.h>      /* hook header file of component SYNCCKDIAG */
#include <Rte_T3StubFile_Application_Core1_Hook.h>      /* hook header file of component T3StubFile_Application_Core1 */
#include <Rte_HookRunnable_Application_Core1_Hook.h>      /* hook header file of component HookRunnable_Application_Core1 */
#include <Rte_CMDPWM_Hook.h>      /* hook header file of component CMDPWM */
#include <Rte_IGCOILMNG_Hook.h>      /* hook header file of component IGCOILMNG */
#include <Rte_T3StubFile_Application_Core2_Hook.h>      /* hook header file of component T3StubFile_Application_Core2 */
#include <Rte_HookRunnable_Application_Core2_Hook.h>      /* hook header file of component HookRunnable_Application_Core2 */

/*==================[macros]=================================================*/
#ifndef RTE_VFB_TRACE
#define RTE_VFB_TRACE (FALSE)
#endif /* RTE_VFB_TRACE */
#if defined(Rte_Task_Activate) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Task_Activate
#endif
#if defined(Rte_Task_Activate)
#undef Rte_Task_Activate
extern FUNC(void, RTE_APPL_CODE) Rte_Task_Activate(TaskType task);
#else
#define Rte_Task_Activate(task) ((void)(0))
#endif /* Rte_Task_Activate */
#if defined(Rte_Task_Dispatch) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Task_Dispatch
#endif
#if defined(Rte_Task_Dispatch)
#undef Rte_Task_Dispatch
extern FUNC(void, RTE_APPL_CODE) Rte_Task_Dispatch(TaskType task);
#else
#define Rte_Task_Dispatch(task) ((void)(0))
#endif /* Rte_Task_Dispatch */
#if defined(Rte_Task_SetEvent) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Task_SetEvent
#endif
#if defined(Rte_Task_SetEvent)
#undef Rte_Task_SetEvent
extern FUNC(void, RTE_APPL_CODE) Rte_Task_SetEvent(TaskType task, EventMaskType ev);
#else
#define Rte_Task_SetEvent(task, ev) ((void)(0))
#endif /* Rte_Task_SetEvent */
#if defined(Rte_Task_WaitEvent) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Task_WaitEvent
#endif
#if defined(Rte_Task_WaitEvent)
#undef Rte_Task_WaitEvent
extern FUNC(void, RTE_APPL_CODE) Rte_Task_WaitEvent(TaskType task, EventMaskType ev);
#else
#define Rte_Task_WaitEvent(task, ev) ((void)(0))
#endif /* Rte_Task_WaitEvent */
#if defined(Rte_Task_WaitEventRet) && (RTE_VFB_TRACE == FALSE)
#undef Rte_Task_WaitEventRet
#endif
#if defined(Rte_Task_WaitEventRet)
#undef Rte_Task_WaitEventRet
extern FUNC(void, RTE_APPL_CODE) Rte_Task_WaitEventRet(TaskType task, EventMaskType ev);
#else
#define Rte_Task_WaitEventRet(task, ev) ((void)(0))
#endif /* Rte_Task_WaitEventRet */

/*==================[type definitions]=======================================*/

/*==================[external function declarations]=========================*/

/*==================[internal function declarations]=========================*/

/*==================[external constants]=====================================*/

/*==================[internal constants]=====================================*/

/*==================[external data]==========================================*/

/*==================[internal data]==========================================*/

/*==================[external function definitions]==========================*/

/*==================[internal function definitions]==========================*/
/** @} doxygen end group definition */
#endif /* !defined(RTE_HOOK_H) */
/*==================[end of file]============================================*/

