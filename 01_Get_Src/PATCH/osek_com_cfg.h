/******************************************************************************/
/*                                                                            */
/* !Layer           : COM                                                     */
/*                                                                            */
/* !Component       : OSEK_COM                                                */
/* !Description     : Osek Communication                                      */
/*                                                                            */
/* !Module          : OSEK_COM_CFG                                            */
/* !Description     : OSEK_COM Configuration                                  */
/*                                                                            */
/* !File            : OSEK_COM_CFG.H                                          */
/*                                                                            */
/* !Scope           : PrivateComponent                                        */
/*                                                                            */
/* !Target          : All                                                     */
/*                                                                            */
/* !Vendor          : Valeo VEES                                              */
/*                                                                            */
/* Coding language  : C                                                       */
/*                                                                            */
/* COPYRIGHT 2005-2009 VALEO                                                  */
/* all rights reserved                                                        */
/*                                                                            */
/******************************************************************************/
/* PVCS Information                                                           */
/* $Archive::   P:/EBx6_2/LOG/ASW/Ref/Main/PATCH/osek_com_cfg.h_v          $*/
/* $Revision::   1.0      $$Author::   croche2        $$Date::   11 Mar$*/
/******************************************************************************/
/* 01/14/14, 14:15:48: generated by Genecode  v2.6.0.0                               */
/* From Source Template : OSEK_COM_CFG_H.TPL                                  */
/******************************************************************************/


#ifndef OSEK_COM_CFG_H
#define OSEK_COM_CFG_H

#include "STD_TYPES.h"
//#include "osek_com_typ.h"
//#include "os_api.h"


/*-------------------------------------------------------------------------
   Definition des Macros de declaration de tables fixes
-------------------------------------------------------------------------*/

//#define setup_table_config_message(mode_typ, mode_con, mode_not, mode_copy,    \
//                                   mode_call, mode_event, mode_task,           \
//                                   task, callback_id, nwl_id, message_info_id, \
//                                   conf_tra, conf_config_size,                 \
//                                   conf_dt_conf, conf_scope,                   \
//                                   bus_id, periode, mask_event, conf_queue,    \
//                                   dlc, ptr_message, Buffer_Index)             \
//   ( (mode_typ << 6) | (mode_con << 5) | (mode_not << 4) | (mode_copy << 3)    \
//   | (mode_call << 2) | (mode_event << 1) | (mode_task)),                      \
//   task, callback_id, nwl_id, message_info_id,                                 \
//   ( (conf_scope << 4) | (conf_tra << 3)                                       \
//   | (conf_config_size << 1) | (conf_dt_conf)),                                \
//   bus_id, periode, mask_event, conf_queue, dlc, ptr_message, Buffer_Index





/*-------------------------------------------------------------------------
   Definition des types utilises
---------------------------------------------------------------------------*/

/*- TABLE de Configuration de tous les MESSAGEs => Utilisation multi-couche -*/
//typedef struct
//{
//   uint8                                             Mode;
//   TaskType                                          Task;
//   uint8                                             Callback_id;
//   OSEK_COM_tudtMsgNwlId                             Nwl_id;
//   uint8                                             Message_info_id;
//   uint8                                             Conf;
//   OSEK_COM_tudtBusId                                Bus_id;
//   uint8                                             Periode;
//   uint8                                             Mask_event;
//   uint8                                             Conf_queue;
//   OSEK_COM_tudtMsgBufferLength                      Dlc;
//   P2VAR(uint8, AUTOMATIC, OSEK_COM_APPL_DATA)       Ptr_message;
//   uint8                                             Buffer_Index;
//} st_message_osek;

/*- TABLE de status des messages -> Multi-couche -*/
//typedef struct
//{
//   P2VAR(uint8, AUTOMATIC, OSEK_COM_APPL_DATA)   Ptr;
//   OSEK_COM_tenuFrameStatus   enuFrameStatus;
//   OSEK_COM_tudtFrameLength   udtFrameLength;
//}st_mess_obj;

/*-------------------------------------------------------------------------
    Dimension des differents elements
-------------------------------------------------------------------------*/


/*- Nombre de Messages -> Utilisation multi-couches                     -*/
#define OSEK_COM_u8NB_MESSAGES 72

/*- Nombre de Messages avec Callback -> Utilisation multi-couches       -*/
#define OSEK_COM_u8NB_CALLBACK 42


/*- Nombre de Messages avec Callback -> Utilisation multi-couches       -*/
#define OSEK_COM_u8BUFFERS_CAN_LENGTH 66 * 8


/*-------------------------------------------------------------------------*/
/* DEFINES                                                                 */
/*-------------------------------------------------------------------------*/

/*- MESSAGES_ID                                                           -*/
#define SN_ETAT_ALT1_RESPONSE 0
#define SN_ETAT_ALT2_RESPONSE 1
#define SN_ETAT_ALT1_HEADER 2
#define SN_ETAT_ALT2_HEADER 3
#define SN_CDE_ALT 4
#define MESSAGE_RX_305 5
#define MESSAGE_RX_30D 6
#define MESSAGE_RX_329 7
#define MESSAGE_RX_349 8
#define MESSAGE_RX_34D 9
#define MESSAGE_RX_38D 10
#define MESSAGE_RX_3AD 11
#define MESSAGE_RX_3C9 12
#define MESSAGE_RX_3CD 13
#define MESSAGE_RX_412 14
#define MESSAGE_RX_44D 15
#define MESSAGE_RX_489 16
#define MESSAGE_RX_492 17
#define MESSAGE_RX_495 18
#define MESSAGE_RX_4B2 19
#define MESSAGE_RX_4D2 20
#define MESSAGE_RX_4F2 21
#define MESSAGE_RX_50D 22
#define MESSAGE_RX_50E 23
#define MESSAGE_RX_532 24
#define MESSAGE_RX_552 25
#define MESSAGE_RX_572 26
#define MESSAGE_RX_57C 27
#define MESSAGE_RX_592 28
#define MESSAGE_RX_5B2 29
#define MESSAGE_RX_612 30
#define UDS_PHYSICAL_RX 31
#define OBD_FUNCTIONNAL_RX 32
#define OBD_PHYSICAL_RX 33
#define MESSAGE_RX_7F2 34
#define UDS_FUNCTIONNAL 35
#define MESSAGE_TX_072 36
#define MESSAGE_TX_0E8 37
#define MESSAGE_TX_108 38
#define MESSAGE_TX_1E8 39
#define MESSAGE_TX_208 40
#define MESSAGE_TX_228 41
#define MESSAGE_TX_2E8 42
#define MESSAGE_TX_348 43
#define MESSAGE_TX_388 44
#define MESSAGE_TX_3B8 45
#define MESSAGE_TX_3C8 46
#define MESSAGE_TX_438 47
#define MESSAGE_TX_468 48
#define MESSAGE_TX_488 49
#define MESSAGE_TX_588 50
#define MESSAGE_TX_5F8 51
#define MESSAGE_TX_608 52
#define UDS_PHYSICAL_TX 53
#define CCP_DTO 54
#define MESSAGE_TX_768 55
#define MESSAGE_TX_788 56
#define MESSAGE_TX_7A8 57
#define CCP_DAQ_BASE_ANGULAR 58
#define CCP_DAQ_BASE_FAST 59
#define CCP_DAQ_BASE_MEDIUM 60
#define CCP_DAQ_BASE_SLOW 61
#define OBD_PHYSICAL_TX 62
#define MESSAGE_RX_092 63
#define MESSAGE_RX_0A8 64
#define MESSAGE_RX_0E0 65
#define MESSAGE_RX_432 66
#define MESSAGE_RX_4C8 67
#define MESSAGE_RX_55F 68
#define CCP_CRO 69
#define MESSAGE_RX_772 70
#define MESSAGE_RX_792 71


/*- ADDRESS_ID                                                            -*/
#define ADR_ETAT_ALT1_RESPONSE 0
#define ADR_ETAT_ALT2_RESPONSE 1
#define ADR_ETAT_ALT1_HEADER 2
#define ADR_ETAT_ALT2_HEADER 3
#define ADR_CDE_ALT 4
#define ADDRESS_RX_305 5
#define ADDRESS_RX_30D 6
#define ADDRESS_RX_329 7
#define ADDRESS_RX_349 8
#define ADDRESS_RX_34D 9
#define ADDRESS_RX_38D 10
#define ADDRESS_RX_3AD 11
#define ADDRESS_RX_3C9 12
#define ADDRESS_RX_3CD 13
#define ADDRESS_RX_412 14
#define ADDRESS_RX_44D 15
#define ADDRESS_RX_489 16
#define ADDRESS_RX_492 17
#define ADDRESS_RX_495 18
#define ADDRESS_RX_4B2 19
#define ADDRESS_RX_4D2 20
#define ADDRESS_RX_4F2 21
#define ADDRESS_RX_50D 22
#define ADDRESS_RX_50E 23
#define ADDRESS_RX_532 24
#define ADDRESS_RX_552 25
#define ADDRESS_RX_572 26
#define ADDRESS_RX_57C 27
#define ADDRESS_RX_592 28
#define ADDRESS_RX_5B2 29
#define ADDRESS_RX_612 30
#define UDS_PHYSICAL_RX_NODE_ID 31
#define OBD_FUNCTIONNAL_RX_NODE_ID 32
#define OBD_PHYSICAL_RX_NODE_ID 33
#define ADDRESS_RX_7F2 34
#define UDS_FUNCTIONNAL_NODE_ID 35
#define ADDRESS_TX_072 36
#define ADDRESS_TX_0E8 37
#define ADDRESS_TX_108 38
#define ADDRESS_TX_1E8 39
#define ADDRESS_TX_208 40
#define ADDRESS_TX_228 41
#define ADDRESS_TX_2E8 42
#define ADDRESS_TX_348 43
#define ADDRESS_TX_388 44
#define ADDRESS_TX_3B8 45
#define ADDRESS_TX_3C8 46
#define ADDRESS_TX_438 47
#define ADDRESS_TX_468 48
#define ADDRESS_TX_488 49
#define ADDRESS_TX_588 50
#define ADDRESS_TX_5F8 51
#define ADDRESS_TX_608 52
#define UDS_PHYSICAL_TX_NODE_ID 53
#define ADR_CCP_DTO 54
#define ADDRESS_TX_768 55
#define ADDRESS_TX_788 56
#define ADDRESS_TX_7A8 57
#define ADR_CCP_DAQ_BASE_ANGULAR 58
#define ADR_CCP_DAQ_BASE_FAST 59
#define ADR_CCP_DAQ_BASE_MEDIUM 60
#define ADR_CCP_DAQ_BASE_SLOW 61
#define OBD_PHYSICAL_TX_NODE_ID 62
#define ADDRESS_RX_092 63
#define ADDRESS_RX_0A8 64
#define ADDRESS_RX_0E0 65
#define ADDRESS_RX_432 66
#define ADDRESS_RX_4C8 67
#define ADDRESS_RX_55F 68
#define ADR_CCP_CRO 69
#define ADDRESS_RX_772 70
#define ADDRESS_RX_792 71



/*- BUS ID                                                                -*/
#define LIN_E 0
#define FIRST_CAN 1
#define SECOND_CAN 2



/*- Champs de TABLE de Configuration de tous les MESSAGEs => Utilisation multi-couche -*/
#define OSEK_COM_bfDT_CONF       0x01u   /* used by COMINL */
#define OSEK_COM_bfCONFIG_SIZE   0x02u   /* used by COMINL */

#define OSEK_COM_bfUSDT          0x01u   /* used by COMINL */
#define OSEK_COM_bfUUDT          0x00u   /* used by COMINL */

#define COMINL_bfSTATIC          0x00u
#define COMINL_bfDYNAMIC         0x02u

#define COMINL_bfANOT            0x10u
#define COMINL_bfACALL           0x04u
#define COMINL_bfATASK           0x01u



#define OSEK_COM_bfTRA           0x08u   /* used by COMINL */
#define OSEK_COM_bfREC           0x00u   /* used by COMINL and CANBSL */

#define OSEK_COM_bfQUEUED        0x01u   /* used by COMINL and CANDLL */
#define OSEK_COM_bfUNQUEUED      0x00u

#define OSEK_COM_bfNONE          0

#define COMINL_bfTYP             0xC0u
#define COMINL_bfMODE_DIRECT     0x00u
#define COMINL_bfMODE_PERIODIC   0x40u
#define COMINL_bfMODE_MIXTE      0xC0u

#define COMINL_bfSCOPE           0x10u
#define COMINL_bfEXTERNAL        0x00u
#define COMINL_bfLOCAL           0x10u

#define CANBSL_bfREC             OSEK_COM_bfREC

/*-------------------------------------------------------------------------
 CONSTANTES
-------------------------------------------------------------------------*/
//#define OSEK_COM_START_SEC_CONST_UNSPECIFIED
//#include "MemMap.h"
//
///*- TABLE de Configuration de tous les MESSAGEs => Utilisation multi-couche -*/
//extern CONST(st_message_osek, OSEK_COM_CONST) Table_config_message[OSEK_COM_u8NB_MESSAGES];
//
///*- Table des Callbacks des couches INL et NWL -*/
//extern CONST(OSEK_COM_tpfvidCallback,OSEK_COM_CONST) OSEK_COM_apfvidCallback[OSEK_COM_u8NB_CALLBACK];
//
//#define OSEK_COM_STOP_SEC_CONST_UNSPECIFIED
//#include "MemMap.h"
//
///*-------------------------------------------------------------------------
// Parametres en zone de Calibration
//-------------------------------------------------------------------------*/
//
//
//
//#define OSEK_COM_START_SEC_CALIB_16BIT
//#include "MemMap.h"
//
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_305;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_30d;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_329;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_349;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_34d;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_38d;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_3ad;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_3c9;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_3cd;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_412;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_44d;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_489;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_492;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_495;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_4b2;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_4d2;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_4f2;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_50d;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_50e;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_532;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_552;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_572;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_57c;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_592;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_5b2;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_612;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_uds_physical_rx;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_obd_functionnal_rx;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_obd_physical_rx;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_7f2;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_uds_functionnal;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_tx_072;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_tx_0e8;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_tx_108;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_tx_1e8;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_tx_208;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_tx_228;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_tx_2e8;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_tx_348;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_tx_388;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_tx_3b8;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_tx_3c8;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_tx_438;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_tx_468;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_tx_488;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_tx_588;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_tx_5f8;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_tx_608;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_uds_physical_tx;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_ccp_dto;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_tx_768;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_tx_788;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_tx_7a8;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_ccp_daq_base_angular;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_ccp_daq_base_fast;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_ccp_daq_base_medium;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_ccp_daq_base_slow;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_obd_physical_tx;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_092;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_0a8;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_0e0;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_432;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_4c8;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_55f;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_ccp_cro;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_772;
//extern CONST(uint16 , OSEK_COM_CONST) Cxx_message_rx_792;
//
//
//#define OSEK_COM_STOP_SEC_CALIB_16BIT
//#include "MemMap.h"
//
//
///*-------------------------------------------------------------------------
// Parametres en RAM
//-------------------------------------------------------------------------*/
//
///*- Multi-couche -*/
//#define OSEK_COM_START_SEC_VAR_UNSPECIFIED
//#include "MemMap.h"
//extern VAR(st_mess_obj , OSEK_COM_VAR)  Acces_message_objet[OSEK_COM_u8NB_MESSAGES];
//#define OSEK_COM_STOP_SEC_VAR_UNSPECIFIED
//#include "MemMap.h"
//
//#define OSEK_COM_START_SEC_VAR_8BIT
//#include "MemMap.h"
//extern VAR(uint8 , OSEK_COM_VAR) Table_message_can[OSEK_COM_u8BUFFERS_CAN_LENGTH];
//
//#define OSEK_COM_STOP_SEC_VAR_8BIT
//#include "MemMap.h"


#endif /* OSEK_COM_CFG_H */

/*------------------------------- end of file --------------------------------*/
