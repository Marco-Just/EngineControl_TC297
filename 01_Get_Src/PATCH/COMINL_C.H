/******************************************************************************/
/*                                                                            */
/* !Layer           : INL                                                     */
/*                                                                            */
/* !Component       : COMINL                                                  */
/* !Description     : Communication, Interaction Layer                        */
/*                                                                            */
/* !Module          : COMINL_C                                                */
/* !Description     : COMINL Configuration                                    */
/*                                                                            */
/* !File            : COMINL_C.H                                              */
/*                                                                            */
/* !Scope           : PrivateComponent                                        */
/*                                                                            */
/* !Target          : All                                                     */
/*                                                                            */
/* !Vendor          : Valeo                                                   */
/*                                                                            */
/* Coding language  : C                                                       */
/*                                                                            */
/* COPYRIGHT 2006 VALEO                                                       */
/* all rights reserved                                                        */
/*                                                                            */
/******************************************************************************/
/* PVCS Information                                                           */
/* $Archive::   P:/EBx6_2/LOG/ASW/Ref/Main/PATCH/COMINL_C.H_v                $*/
/* $Revision::   1.0      $$Author::   croche2        $$Date::   11 Mar 2014 $*/
/******************************************************************************/
/* 01/14/14, 14:15:48: generated by Genecode  v2.6.0.0                        */
/* From Source Template : COMINL_C_H.TPL                                      */
/******************************************************************************/

#ifndef COMINL_C_H
#define COMINL_C_H

#include "STD_TYPES.h"
#include "cominl_t.h"
#include "osek_com.h"

/******************************************************************************/
/* DEFINES                                                                    */
/******************************************************************************/

/*-----------------------------------------------------------------------
    COMINL Confirmation Mode Mask
-----------------------------------------------------------------------*/
#define COMINL_bfACON        0x20u

/* !Comment: Number of periodic message to manage in transmission             */
#define NB_TRAMES_PERIODIQUES_TX  0

/* !Comment: Number of dynamic lenght message to manage                       */
#define NB_MESSAGES_DYNAMIQUES 61

/* !Comment: Conditional compilation for Dynamic messages management */
#define COMINL_coDYNAMIC_MNG_YES        0x55u
#define COMINL_coDYNAMIC_MNG_NO         0xAAu
#define COMINL_coDYNAMIC_MSG_MANAGE  COMINL_coDYNAMIC_MNG_YES

/* !MComment: Standards defines which can be used in the COMINL component     */
#define COMINL_coENABLED    0x01
#define COMINL_coDISABLED   0x00

/* !Comment: Define which indicates if Minimum Delay Time is managed          */
#define COMINL_coMDT_MANAGEMENT   COMINL_coENABLED


/* USDT Managment in COMINL */



#define COMINL_coUSDT_MANAGEMENT   COMINL_coDISABLED


/******************************************************************************/
/* MACRO FUNCTIONS                                                            */
/******************************************************************************/

#if (COMINL_coMDT_MANAGEMENT == COMINL_coDISABLED)
#define COMINL_vidUudataReq  COMDLL_vidUudataReq
#endif /* (COMINL_coMDT_MANAGEMENT == COMINL_coDISABLED) */


/******************************************************************************/
/* TYPES                                                                      */
/******************************************************************************/


/******************************************************************************/
/* CALIBRATIONS DEFINITION                                                    */
/******************************************************************************/


/******************************************************************************/
/* CONSTANTS DEFINITION                                                       */
/******************************************************************************/
#define COMINL_START_SEC_CONST_UNSPECIFIED
#include "MemMap.h"

/* Tables of Minimum Delay Time management (Delay Time and Alarm identifiant) */
#if (COMINL_coMDT_MANAGEMENT == COMINL_coENABLED)
extern CONST(TickType , COMINL_CONST) COMINL_udtMsgMinimumDelayTime[OSEK_COM_u8NB_MESSAGES];
extern CONST(AlarmType , COMINL_CONST)  COMINL_udtMDTAlarmId[OSEK_COM_u8NB_MESSAGES];
#endif /* (COMINL_coMDT_MANAGEMENT == COMINL_coENABLED) */


#define COMINL_STOP_SEC_CONST_UNSPECIFIED
#include "MemMap.h"
/******************************************************************************/
/* DATA DEFINITION                                                            */
/******************************************************************************/
#define COMINL_START_SEC_VAR_8BIT
#include "MemMap.h"
extern VAR(uint8, COMINL_VAR) COMINL_pu8MessageBuffer_UDS_CANTP_NETWORK[64];
extern VAR(uint8, COMINL_VAR) COMINL_pu8MessageBuffer_OBD_CANTP_NETWORK[64];
extern VAR(uint8, COMINL_VAR) COMINL_u8FunctionalMsgBuffer_UDS_CANTP_NETWORK[64];
extern VAR(uint8, COMINL_VAR) COMINL_u8FunctionalMsgBuffer_OBD_CANTP_NETWORK[64];


#define COMINL_STOP_SEC_VAR_8BIT
#include "MemMap.h"



#define COMINL_START_SEC_VAR_UNSPECIFIED
#include "MemMap.h"
extern VAR(st_mess_info,COMINL_VAR)  Access_message_info[NB_MESSAGES_DYNAMIQUES];

#define COMINL_STOP_SEC_VAR_UNSPECIFIED
#include "MemMap.h"


#define COMINL_START_SEC_VAR_BOOLEAN
#include "MemMap.h"

#if (COMINL_coMDT_MANAGEMENT == COMINL_coENABLED)

   extern VAR(boolean , COMINL_VAR) COMINL_bActivatedMDT[OSEK_COM_u8NB_MESSAGES];
   extern VAR(boolean , COMINL_VAR) COMINL_bMsgWaitingTransmission[OSEK_COM_u8NB_MESSAGES];
#endif /* (COMINL_coMDT_MANAGEMENT == COMINL_coENABLED) */

#if (COMINL_coUSDT_MANAGEMENT == COMINL_coENABLED)
extern VAR(boolean , COMINL_VAR) COMINL_abMsgBusy[4];
#endif /* (COMINL_coUSDT_MANAGEMENT == COMINL_coENABLED) */


#define COMINL_STOP_SEC_VAR_BOOLEAN
#include "MemMap.h"


#define COMINL_START_SEC_VAR_16BIT
#include "MemMap.h"

extern VAR(uint16 , COMINL_VAR) COMINL_au16MsgIndex[OSEK_COM_u8NB_MESSAGES];

#define COMINL_STOP_SEC_VAR_16BIT
#include "MemMap.h"


/******************************************************************************/
/* FUNCTIONS                                                                  */
/******************************************************************************/
/* Callback function                                                          */
extern void ISLIN_vidEveRxnEtatAlt1(void);
extern void ISLIN_vidEveRxnEtatAlt2(void);
extern void ISCAN_vidRxFrame_305(void);
extern void ISCAN_vidRxFrame_30D(void);
extern void ISCAN_vidRxFrame_329(void);
extern void ISCAN_vidRxFrame_349(void);
extern void ISCAN_vidRxFrame_34D(void);
extern void ISCAN_vidRxFrame_38D(void);
extern void ISCAN_vidRxFrame_3AD(void);
extern void ISCAN_vidRxFrame_3C9(void);
extern void ISCAN_vidRxFrame_3CD(void);
extern void ISCAN_vidRxFrame_412(void);
extern void ISCAN_vidRxFrame_44D(void);
extern void ISCAN_vidRxFrame_489(void);
extern void ISCAN_vidRxFrame_492(void);
extern void ISCAN_vidRxFrame_495(void);
extern void ISCAN_vidRxFrame_4B2(void);
extern void ISCAN_vidRxFrame_4D2(void);
extern void ISCAN_vidRxFrame_4F2(void);
extern void ISCAN_vidRxFrame_50D(void);
extern void ISCAN_vidRxFrame_50E(void);
extern void ISCAN_vidRxFrame_532(void);
extern void ISCAN_vidRxFrame_552(void);
extern void ISCAN_vidRxFrame_572(void);
extern void ISCAN_vidRxFrame_57C(void);
extern void ISCAN_vidRxFrame_592(void);
extern void ISCAN_vidRxFrame_5B2(void);
extern void ISCAN_vidRxFrame_612(void);
extern void ISCAN_vidRxFrame_7F2(void);
extern void CCP_vidDAQ_BASE_ANGULAR(void);
extern void CCP_vidDAQ_BASE_FAST(void);
extern void CCP_vidDAQ_BASE_MEDIUM(void);
extern void CCP_vidDAQ_BASE_SLOW(void);
extern void ISCAN_vidRxFrame_092(void);
extern void ISCAN_vidRxFrame_0A8(void);
extern void ISCAN_vidRxFrame_0E0(void);
extern void ISCAN_vidRxFrame_432(void);
extern void ISCAN_vidRxFrame_4C8(void);
extern void ISCAN_vidRxFrame_55F(void);
extern void CcpMonitor(void);
extern void ISCAN_vidRxFrame_772(void);
extern void ISCAN_vidRxFrame_792(void);



#endif /* COMINL_C_H */

/*------------------------------- end of file --------------------------------*/
